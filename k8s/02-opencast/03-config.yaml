kind: ConfigMap
apiVersion: v1
metadata:
  name: activemq-config
  namespace: opencast
data:
  activemq.xml: |
    <!--
        Licensed to the Apache Software Foundation (ASF) under one or more
        contributor license agreements.  See the NOTICE file distributed with
        this work for additional information regarding copyright ownership.
        The ASF licenses this file to You under the Apache License, Version 2.0
        (the "License"); you may not use this file except in compliance with
        the License.  You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

        Unless required by applicable law or agreed to in writing, software
        distributed under the License is distributed on an "AS IS" BASIS,
        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        See the License for the specific language governing permissions and
        limitations under the License.
    -->
    <!-- START SNIPPET: example -->
    <beans
      xmlns="http://www.springframework.org/schema/beans"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
      http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core.xsd">

        <!-- Allows us to use system properties as variables in this configuration file -->
        <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
            <property name="locations">
                <value>file:${activemq.conf}/credentials.properties</value>
            </property>
        </bean>

        <!-- Allows accessing the server log -->
        <!-- Turned off by default
        <bean id="logQuery" class="io.fabric8.insight.log.log4j.Log4jLogQuery"
              lazy-init="false" scope="singleton"
              init-method="start" destroy-method="stop">
        </bean>
        -->

        <!--
            The <broker> element is used to configure the ActiveMQ broker.
        -->
        <broker xmlns="http://activemq.apache.org/schema/core" brokerName="localhost" dataDirectory="${activemq.data}">

            <destinationPolicy>
                <policyMap>
                  <policyEntries>
                    <policyEntry topic=">" >
                        <!-- The constantPendingMessageLimitStrategy is used to prevent
                             slow topic consumers to block producers and affect other consumers
                             by limiting the number of messages that are retained
                             For more information, see:

                             http://activemq.apache.org/slow-consumer-handling.html

                        -->
                      <pendingMessageLimitStrategy>
                        <constantPendingMessageLimitStrategy limit="1000"/>
                      </pendingMessageLimitStrategy>
                    </policyEntry>
                  </policyEntries>
                </policyMap>
            </destinationPolicy>

            <destinationInterceptors>
              <virtualDestinationInterceptor>
                <virtualDestinations>
                  <compositeQueue name="ACL.QUEUE">
                    <forwardTo>
                      <queue physicalName="ACL.Adminui" />
                      <queue physicalName="ACL.Externalapi" />
                    </forwardTo>
                  </compositeQueue>
                </virtualDestinations>
              </virtualDestinationInterceptor>
              <virtualDestinationInterceptor>
                <virtualDestinations>
                  <compositeQueue name="ASSETMANAGER.QUEUE">
                    <forwardTo>
                      <queue physicalName="ASSETMANAGER.Adminui" />
                      <queue physicalName="ASSETMANAGER.Externalapi" />
                      <queue physicalName="ASSETMANAGER.Conductor" />
                    </forwardTo>
                  </compositeQueue>
                </virtualDestinations>
              </virtualDestinationInterceptor>
              <virtualDestinationInterceptor>
                <virtualDestinations>
                  <compositeQueue name="COMMENT.QUEUE">
                    <forwardTo>
                      <queue physicalName="COMMENT.Adminui" />
                      <queue physicalName="COMMENT.Externalapi" />
                    </forwardTo>
                  </compositeQueue>
                </virtualDestinations>
              </virtualDestinationInterceptor>
              <virtualDestinationInterceptor>
                <virtualDestinations>
                  <compositeQueue name="GROUP.QUEUE">
                    <forwardTo>
                      <queue physicalName="GROUP.Adminui" />
                      <queue physicalName="GROUP.Externalapi" />
                    </forwardTo>
                  </compositeQueue>
                </virtualDestinations>
              </virtualDestinationInterceptor>
              <virtualDestinationInterceptor>
                <virtualDestinations>
                  <compositeQueue name="SCHEDULER.QUEUE">
                    <forwardTo>
                      <queue physicalName="SCHEDULER.Adminui" />
                      <queue physicalName="SCHEDULER.Externalapi" />
                    </forwardTo>
                  </compositeQueue>
                </virtualDestinations>
              </virtualDestinationInterceptor>
              <virtualDestinationInterceptor>
                <virtualDestinations>
                  <compositeQueue name="SERIES.QUEUE">
                    <forwardTo>
                      <queue physicalName="SERIES.Adminui" />
                      <queue physicalName="SERIES.Conductor" />
                      <queue physicalName="SERIES.Externalapi" />
                    </forwardTo>
                  </compositeQueue>
                </virtualDestinations>
              </virtualDestinationInterceptor>
              <virtualDestinationInterceptor>
                <virtualDestinations>
                  <compositeQueue name="THEME.QUEUE">
                    <forwardTo>
                      <queue physicalName="THEME.Adminui" />
                      <queue physicalName="THEME.Externalapi" />
                    </forwardTo>
                  </compositeQueue>
                </virtualDestinations>
              </virtualDestinationInterceptor>
              <virtualDestinationInterceptor>
                <virtualDestinations>
                  <compositeQueue name="WORKFLOW.QUEUE">
                    <forwardTo>
                      <queue physicalName="WORKFLOW.Adminui" />
                      <queue physicalName="WORKFLOW.Externalapi" />
                    </forwardTo>
                  </compositeQueue>
                </virtualDestinations>
              </virtualDestinationInterceptor>
            </destinationInterceptors>

            <!--
                The managementContext is used to configure how ActiveMQ is exposed in
                JMX. By default, ActiveMQ uses the MBean server that is started by
                the JVM. For more information, see:

                http://activemq.apache.org/jmx.html
            -->
            <managementContext>
                <managementContext createConnector="false"/>
            </managementContext>

            <!--
                Configure message persistence for the broker. The default persistence
                mechanism is the KahaDB store (identified by the kahaDB tag).
                For more information, see:

                http://activemq.apache.org/persistence.html
            -->
            <persistenceAdapter>
                <kahaDB directory="${activemq.data}/kahadb"/>
            </persistenceAdapter>


              <!--
                The systemUsage controls the maximum amount of space the broker will
                use before disabling caching and/or slowing down producers. For more information, see:
                http://activemq.apache.org/producer-flow-control.html
              -->
              <systemUsage>
                <systemUsage>
                    <memoryUsage>
                        <memoryUsage percentOfJvmHeap="70" />
                    </memoryUsage>
                    <storeUsage>
                        <storeUsage limit="100 gb"/>
                    </storeUsage>
                    <tempUsage>
                        <tempUsage limit="50 gb"/>
                    </tempUsage>
                </systemUsage>
            </systemUsage>

            <!--
                The transport connectors expose ActiveMQ over a given protocol to
                clients and other brokers. For more information, see:

                http://activemq.apache.org/configuring-transports.html
            -->
            <transportConnectors>
                <!-- DOS protection, limit concurrent connections to 1000 and frame size to 100MB -->
                <transportConnector name="openwire" uri="tcp://0.0.0.0:61616?maximumConnections=1000&amp;wireFormat.maxFrameSize=104857600"/>
            </transportConnectors>

            <!-- destroy the spring context on shutdown to stop jetty -->
            <shutdownHooks>
                <bean xmlns="http://www.springframework.org/schema/beans" class="org.apache.activemq.hooks.SpringContextHook" />
            </shutdownHooks>

        </broker>

        <!--
            Enable web consoles, REST and Ajax APIs and demos
            The web consoles requires by default login, you can disable this in the jetty.xml file

            Take a look at ${ACTIVEMQ_HOME}/conf/jetty.xml for more details
        -->
        <!--<import resource="jetty.xml"/>-->

    </beans>
    <!-- END SNIPPET: example -->

---

kind: ConfigMap
apiVersion: v1
metadata:
  name: mariadb-config
  namespace: opencast
data:
  opencast-ddl.sql: |
    -- Created with Opencast version 4.1

    CREATE TABLE SEQUENCE (
      SEQ_NAME VARCHAR(50) NOT NULL,
      SEQ_COUNT DECIMAL(38),
      PRIMARY KEY (SEQ_NAME)
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8;

    INSERT INTO SEQUENCE(SEQ_NAME, SEQ_COUNT) values ('SEQ_GEN', 0);
    INSERT INTO SEQUENCE(SEQ_NAME, SEQ_COUNT) values ('seq_mh_assets_asset', 0);
    INSERT INTO SEQUENCE(SEQ_NAME, SEQ_COUNT) values ('seq_mh_assets_snapshot', 0);

    CREATE TABLE mh_bundleinfo (
      id BIGINT(20) NOT NULL,
      bundle_name VARCHAR(128) NOT NULL,
      build_number VARCHAR(128) DEFAULT NULL,
      host VARCHAR(128) NOT NULL,
      bundle_id BIGINT(20) NOT NULL,
      bundle_version VARCHAR(128) NOT NULL,
      db_schema_version VARCHAR(128) DEFAULT NULL,
      PRIMARY KEY (id),
      CONSTRAINT UNQ_mh_bundleinfo UNIQUE (host, bundle_name, bundle_version)
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8;

    CREATE TABLE mh_organization (
      id VARCHAR(128) NOT NULL,
      anonymous_role VARCHAR(255),
      name VARCHAR(255),
      admin_role VARCHAR(255),
      PRIMARY KEY (id)
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8;

    CREATE TABLE mh_organization_node (
      organization VARCHAR(128) NOT NULL,
      port int(11),
      name VARCHAR(255),
      PRIMARY KEY (organization, port, name),
      CONSTRAINT FK_mh_organization_node_organization FOREIGN KEY (organization) REFERENCES mh_organization (id) ON DELETE CASCADE
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8;

    CREATE INDEX IX_mh_organization_node_pk ON mh_organization_node (organization);
    CREATE INDEX IX_mh_organization_node_name ON mh_organization_node (name);
    CREATE INDEX IX_mh_organization_node_port ON mh_organization_node (port);

    CREATE TABLE mh_organization_property (
      organization VARCHAR(128) NOT NULL,
      name VARCHAR(255) NOT NULL,
      value TEXT(65535),
      PRIMARY KEY (organization, name),
      CONSTRAINT FK_mh_organization_property_organization FOREIGN KEY (organization) REFERENCES mh_organization (id) ON DELETE CASCADE
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8;

    CREATE INDEX IX_mh_organization_property_pk ON mh_organization_property (organization);

    CREATE TABLE mh_annotation (
      id BIGINT NOT NULL,
      inpoint INTEGER,
      outpoint INTEGER,
      mediapackage VARCHAR(128),
      session VARCHAR(128),
      created DATETIME,
      user_id VARCHAR(255),
      length INTEGER,
      type VARCHAR(128),
      value TEXT(65535),
      private TINYINT(1) DEFAULT 0,
      PRIMARY KEY (id)
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8;

    CREATE INDEX IX_mh_annotation_created ON mh_annotation (created);
    CREATE INDEX IX_mh_annotation_inpoint ON mh_annotation (inpoint);
    CREATE INDEX IX_mh_annotation_outpoint ON mh_annotation (outpoint);
    CREATE INDEX IX_mh_annotation_mediapackage ON mh_annotation (mediapackage);
    CREATE INDEX IX_mh_annotation_private ON mh_annotation (private);
    CREATE INDEX IX_mh_annotation_user ON mh_annotation (user_id);
    CREATE INDEX IX_mh_annotation_session ON mh_annotation (session);
    CREATE INDEX IX_mh_annotation_type ON mh_annotation (type);

    CREATE TABLE mh_capture_agent_role (
      id VARCHAR(128) NOT NULL,
      organization VARCHAR(128) NOT NULL,
      role VARCHAR(255),
      PRIMARY KEY (id, organization, role),
      CONSTRAINT FK_mh_capture_agent_role_organization FOREIGN KEY (organization) REFERENCES mh_organization (id) ON DELETE CASCADE
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8;

    CREATE INDEX IX_mh_capture_agent_role_pk ON mh_capture_agent_role (id, organization);

    CREATE TABLE mh_capture_agent_state (
      id VARCHAR(128) NOT NULL,
      organization VARCHAR(128) NOT NULL,
      configuration TEXT(65535),
      state TEXT(65535) NOT NULL,
      last_heard_from BIGINT NOT NULL,
      url TEXT(65535),
      PRIMARY KEY (id, organization),
      CONSTRAINT FK_mh_capture_agent_state_organization FOREIGN KEY (organization) REFERENCES mh_organization (id) ON DELETE CASCADE
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8;

    CREATE TABLE mh_host_registration (
      id BIGINT NOT NULL,
      host VARCHAR(255) NOT NULL,
      address VARCHAR(39) NOT NULL,
      memory BIGINT NOT NULL,
      cores INTEGER NOT NULL,
      maintenance TINYINT(1) DEFAULT 0 NOT NULL,
      online TINYINT(1) DEFAULT 1 NOT NULL,
      active TINYINT(1) DEFAULT 1 NOT NULL,
      max_load FLOAT NOT NULL DEFAULT '1.0',
      PRIMARY KEY (id),
      CONSTRAINT UNQ_mh_host_registration UNIQUE (host)
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8;

    CREATE INDEX IX_mh_host_registration_online ON mh_host_registration (online);
    CREATE INDEX IX_mh_host_registration_active ON mh_host_registration (active);

    CREATE TABLE mh_service_registration (
      id BIGINT NOT NULL,
      path VARCHAR(255) NOT NULL,
      job_producer TINYINT(1) DEFAULT 0 NOT NULL,
      service_type VARCHAR(255) NOT NULL,
      online TINYINT(1) DEFAULT 1 NOT NULL,
      active TINYINT(1) DEFAULT 1 NOT NULL,
      online_from DATETIME,
      service_state int NOT NULL,
      state_changed DATETIME,
      warning_state_trigger BIGINT,
      error_state_trigger BIGINT,
      host_registration BIGINT,
      PRIMARY KEY (id),
      CONSTRAINT UNQ_mh_service_registration UNIQUE (host_registration, service_type),
      CONSTRAINT FK_mh_service_registration_host_registration FOREIGN KEY (host_registration) REFERENCES mh_host_registration (id) ON DELETE CASCADE
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8;

    CREATE INDEX IX_mh_service_registration_service_type ON mh_service_registration (service_type);
    CREATE INDEX IX_mh_service_registration_service_state ON mh_service_registration (service_state);
    CREATE INDEX IX_mh_service_registration_active ON mh_service_registration (active);
    CREATE INDEX IX_mh_service_registration_host_registration ON mh_service_registration (host_registration);

    CREATE TABLE mh_job (
      id BIGINT NOT NULL,
      status INTEGER,
      payload MEDIUMTEXT,
      date_started DATETIME,
      run_time BIGINT,
      creator TEXT(65535) NOT NULL,
      instance_version BIGINT,
      date_completed DATETIME,
      operation VARCHAR(128),
      dispatchable TINYINT(1) DEFAULT 1,
      organization VARCHAR(128) NOT NULL,
      date_created DATETIME,
      queue_time BIGINT,
      creator_service BIGINT,
      processor_service BIGINT,
      parent BIGINT,
      root BIGINT,
      job_load FLOAT NOT NULL DEFAULT 1.0,
      blocking_job BIGINT DEFAULT NULL,
      PRIMARY KEY (id),
      CONSTRAINT FK_mh_job_creator_service FOREIGN KEY (creator_service) REFERENCES mh_service_registration (id) ON DELETE CASCADE,
      CONSTRAINT FK_mh_job_processor_service FOREIGN KEY (processor_service) REFERENCES mh_service_registration (id) ON DELETE CASCADE,
      CONSTRAINT FK_mh_job_parent FOREIGN KEY (parent) REFERENCES mh_job (id) ON DELETE CASCADE,
      CONSTRAINT FK_mh_job_root FOREIGN KEY (root) REFERENCES mh_job (id) ON DELETE CASCADE,
      CONSTRAINT FK_mh_job_organization FOREIGN KEY (organization) REFERENCES mh_organization (id) ON DELETE CASCADE
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8;

    CREATE INDEX IX_mh_job_parent ON mh_job (parent);
    CREATE INDEX IX_mh_job_root ON mh_job (root);
    CREATE INDEX IX_mh_job_creator_service ON mh_job (creator_service);
    CREATE INDEX IX_mh_job_processor_service ON mh_job (processor_service);
    CREATE INDEX IX_mh_job_status ON mh_job (status);
    CREATE INDEX IX_mh_job_date_created ON mh_job (date_created);
    CREATE INDEX IX_mh_job_date_completed ON mh_job (date_completed);
    CREATE INDEX IX_mh_job_dispatchable ON mh_job (dispatchable);
    CREATE INDEX IX_mh_job_operation ON mh_job (operation);
    CREATE INDEX IX_mh_job_statistics ON mh_job (processor_service, status, queue_time, run_time);

    CREATE TABLE mh_job_argument (
      id BIGINT NOT NULL,
      argument TEXT(2147483647),
      argument_index INTEGER,
      CONSTRAINT FK_mh_job_argument_id FOREIGN KEY (id) REFERENCES mh_job (id) ON DELETE CASCADE
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8;

    CREATE INDEX IX_mh_job_argument_id ON mh_job_argument (id);

    CREATE TABLE mh_blocking_job (
      id BIGINT NOT NULL,
      blocking_job_list BIGINT,
      job_index INTEGER,
      CONSTRAINT FK_blocking_job_id FOREIGN KEY (id) REFERENCES mh_job (id) ON DELETE CASCADE
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8;

    CREATE TABLE mh_job_context (
      id BIGINT NOT NULL,
      name VARCHAR(255) NOT NULL,
      value TEXT(65535),
      CONSTRAINT UNQ_mh_job_context UNIQUE (id, name),
      CONSTRAINT FK_mh_job_context_id FOREIGN KEY (id) REFERENCES mh_job (id) ON DELETE CASCADE
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8;

    CREATE INDEX IX_mh_job_context_id ON mh_job_context (id);

    CREATE TABLE mh_job_mh_service_registration (
      Job_id BIGINT NOT NULL,
      servicesRegistration_id BIGINT NOT NULL,
      PRIMARY KEY (Job_id, servicesRegistration_id),
      CONSTRAINT FK_mh_job_mh_service_registration_Job_id FOREIGN KEY (Job_id) REFERENCES mh_job (id) ON DELETE CASCADE,
      CONSTRAINT FK_mh_job_mh_service_registration_servicesRegistration_id FOREIGN KEY (servicesRegistration_id) REFERENCES mh_service_registration (id) ON DELETE CASCADE
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8;

    CREATE INDEX IX_mh_job_mh_service_registration_servicesRegistration_id ON mh_job_mh_service_registration (servicesRegistration_id);

    CREATE TABLE mh_incident (
      id BIGINT NOT NULL,
      jobid BIGINT,
      timestamp DATETIME,
      code VARCHAR(255),
      severity INTEGER,
      parameters TEXT(65535),
      details TEXT(65535),
      PRIMARY KEY (id),
      CONSTRAINT FK_mh_incident_jobid FOREIGN KEY (jobid) REFERENCES mh_job (id) ON DELETE CASCADE
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8;

    CREATE INDEX IX_mh_incident_jobid ON mh_incident (jobid);
    CREATE INDEX IX_mh_incident_severity ON mh_incident (severity);

    CREATE TABLE mh_incident_text (
      id VARCHAR(255) NOT NULL,
      text VARCHAR(2038) NOT NULL,
      PRIMARY KEY (id)
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8;

    CREATE TABLE mh_scheduled_last_modified (
      capture_agent_id VARCHAR(255) NOT NULL,
      last_modified DATETIME NOT NULL,
      PRIMARY KEY (capture_agent_id)
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8;

    CREATE INDEX IX_mh_scheduled_last_modified_last_modified ON mh_scheduled_last_modified (last_modified);

    CREATE TABLE mh_scheduled_extended_event (
      mediapackage_id VARCHAR(128) NOT NULL,
      organization VARCHAR(128) NOT NULL,
      PRIMARY KEY (mediapackage_id, organization),
      CONSTRAINT FK_mh_scheduled_extended_event_organization FOREIGN KEY (organization) REFERENCES mh_organization (id) ON DELETE CASCADE
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8;

    CREATE TABLE mh_scheduled_transaction (
      id VARCHAR(128) NOT NULL,
      organization VARCHAR(128) NOT NULL,
      source VARCHAR(255) NOT NULL,
      last_modified DATETIME NOT NULL,
      PRIMARY KEY (id, organization),
      CONSTRAINT UNQ_mh_scheduled_transaction UNIQUE (id, organization, source),
      CONSTRAINT FK_mh_scheduled_transaction_organization FOREIGN KEY (organization) REFERENCES mh_organization (id) ON DELETE CASCADE
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8;

    CREATE INDEX IX_mh_scheduled_transaction_source ON mh_scheduled_transaction (source);

    CREATE TABLE mh_search (
      id VARCHAR(128) NOT NULL,
      series_id VARCHAR(128),
      organization VARCHAR(128),
      deletion_date DATETIME,
      access_control TEXT(65535),
      mediapackage_xml MEDIUMTEXT,
      modification_date DATETIME,
      PRIMARY KEY (id),
      CONSTRAINT FK_mh_search_organization FOREIGN KEY (organization) REFERENCES mh_organization (id) ON DELETE CASCADE
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8;

    CREATE INDEX IX_mh_search_organization ON mh_search (organization);

    CREATE TABLE mh_series (
      id VARCHAR(128) NOT NULL,
      organization VARCHAR(128) NOT NULL,
      access_control TEXT(65535),
      dublin_core TEXT(65535),
      opt_out   tinyint(1) NOT NULL DEFAULT '0',
      PRIMARY KEY (id, organization),
      CONSTRAINT FK_mh_series_organization FOREIGN KEY (organization) REFERENCES mh_organization (id) ON DELETE CASCADE
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8;

    CREATE TABLE mh_oaipmh (
      mp_id VARCHAR(128) NOT NULL,
      organization VARCHAR(128) NOT NULL,
      repo_id VARCHAR(255) NOT NULL,
      series_id VARCHAR(128),
      deleted tinyint(1) DEFAULT '0',
      modification_date DATETIME DEFAULT NULL,
      mediapackage_xml TEXT(65535) NOT NULL,
      PRIMARY KEY (mp_id, repo_id, organization),
      CONSTRAINT UNQ_mh_oaipmh UNIQUE (modification_date)
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8;

    CREATE INDEX IX_mh_oaipmh_modification_date ON mh_oaipmh (modification_date);

    -- set to current date and time on insert
    CREATE TRIGGER mh_init_oaipmh_date BEFORE INSERT ON `mh_oaipmh`
    FOR EACH ROW SET NEW.modification_date = NOW();

    -- set to current date and time on update
    CREATE TRIGGER mh_update_oaipmh_date BEFORE UPDATE ON `mh_oaipmh`
    FOR EACH ROW SET NEW.modification_date = NOW();

    CREATE TABLE mh_oaipmh_elements (
      id INT(20) NOT NULL AUTO_INCREMENT,
      element_type VARCHAR(16) NOT NULL,
      flavor varchar(255) NOT NULL,
      xml TEXT(65535) NOT NULL,
      mp_id VARCHAR(128) NOT NULL,
      organization VARCHAR(128) NOT NULL,
      repo_id VARCHAR(255) NOT NULL,
      PRIMARY KEY (id),
      CONSTRAINT FK_mh_oaipmh_elements
        FOREIGN KEY (mp_id, repo_id, organization)
        REFERENCES mh_oaipmh (mp_id, repo_id, organization)
        ON DELETE CASCADE ON UPDATE CASCADE
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8;

    CREATE TABLE mh_user_session (
      session_id VARCHAR(50) NOT NULL,
      user_ip VARCHAR(255),
      user_agent VARCHAR(255),
      user_id VARCHAR(255),
      PRIMARY KEY (session_id)
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8;

    CREATE INDEX IX_mh_user_session_user_id ON mh_user_session (user_id);

    CREATE TABLE mh_user_action (
      id BIGINT NOT NULL,
      inpoint INTEGER,
      outpoint INTEGER,
      mediapackage VARCHAR(128),
      session_id VARCHAR(50) NOT NULL,
      created DATETIME,
      length INTEGER,
      type VARCHAR(128),
      playing TINYINT(1) DEFAULT 0,
      PRIMARY KEY (id),
      CONSTRAINT FK_mh_user_action_session_id FOREIGN KEY (session_id) REFERENCES mh_user_session (session_id) ON DELETE CASCADE
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8;

    CREATE INDEX IX_mh_user_action_created ON mh_user_action (created);
    CREATE INDEX IX_mh_user_action_inpoint ON mh_user_action (inpoint);
    CREATE INDEX IX_mh_user_action_outpoint ON mh_user_action (outpoint);
    CREATE INDEX IX_mh_user_action_mediapackage_id ON mh_user_action (mediapackage);
    CREATE INDEX IX_mh_user_action_type ON mh_user_action (type);

    CREATE TABLE mh_oaipmh_harvesting (
      url VARCHAR(255) NOT NULL,
      last_harvested datetime,
      PRIMARY KEY (url)
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8;

    CREATE TABLE mh_assets_snapshot (
      id BIGINT PRIMARY KEY NOT NULL,
      archival_date DATETIME NOT NULL,
      availability VARCHAR(32) NOT NULL,
      mediapackage_id VARCHAR(128) NOT NULL,
      mediapackage_xml LONGTEXT NOT NULL,
      series_id VARCHAR(128),
      organization_id VARCHAR(128) NOT NULL,
      owner VARCHAR(256) NOT NULL,
      version BIGINT NOT NULL,
      --
      CONSTRAINT UNQ_mh_assets_snapshot UNIQUE (mediapackage_id, version),
      CONSTRAINT FK_mh_assets_snapshot_organization FOREIGN KEY (organization_id) REFERENCES mh_organization (id),
      INDEX IX_mh_assets_snapshot_archival_date (archival_date),
      INDEX IX_mh_assets_snapshot_mediapackage_id (mediapackage_id),
      INDEX IX_mh_assets_snapshot_organization_id (organization_id),
      INDEX IX_mh_assets_snapshot_owner (owner)
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8;

    CREATE TABLE mh_assets_asset (
      id BIGINT PRIMARY KEY NOT NULL,
      snapshot_id BIGINT NOT NULL,
      checksum VARCHAR(64) NOT NULL,
      mediapackage_element_id VARCHAR(128) NOT NULL,
      mime_type VARCHAR(64),
      size BIGINT NOT NULL,
      --
      INDEX IX_mh_assets_asset_checksum (checksum),
      INDEX IX_mh_assets_asset_mediapackage_element_id (mediapackage_element_id)
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8;

    CREATE TABLE mh_assets_properties (
      id BIGINT PRIMARY KEY NOT NULL,
      val_bool TINYINT(1) DEFAULT 0,
      val_date DATETIME,
      val_long BIGINT,
      val_string VARCHAR(255),
      mediapackage_id VARCHAR(128) NOT NULL,
      namespace VARCHAR(128) NOT NULL,
      property_name VARCHAR(128) NOT NULL,
      --
      INDEX IX_mh_assets_properties_val_date (val_date),
      INDEX IX_mh_assets_properties_val_long (val_long),
      INDEX IX_mh_assets_properties_val_string (val_string),
      INDEX IX_mh_assets_properties_val_bool (val_bool),
      INDEX IX_mh_assets_properties_mediapackage_id (mediapackage_id),
      INDEX IX_mh_assets_properties_namespace (namespace),
      INDEX IX_mh_assets_properties_property_name (property_name)
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8;

    CREATE TABLE mh_assets_version_claim (
      mediapackage_id VARCHAR(128) PRIMARY KEY NOT NULL,
      last_claimed BIGINT NOT NULL
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8;

    --
    -- ACL manager
    --
    CREATE TABLE mh_acl_managed_acl (
      pk BIGINT(20) NOT NULL,
      acl TEXT NOT NULL,
      name VARCHAR(128) NOT NULL,
      organization_id VARCHAR(128) NOT NULL,
      PRIMARY KEY (pk),
      CONSTRAINT UNQ_mh_acl_managed_acl UNIQUE (name, organization_id)
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8;

    CREATE TABLE mh_acl_episode_transition (
      pk BIGINT(20) NOT NULL,
      workflow_params VARCHAR(255) DEFAULT NULL,
      application_date DATETIME DEFAULT NULL,
      workflow_id VARCHAR(128) DEFAULT NULL,
      done TINYINT(1) DEFAULT 0,
      episode_id VARCHAR(128) DEFAULT NULL,
      organization_id VARCHAR(128) DEFAULT NULL,
      managed_acl_fk BIGINT(20) DEFAULT NULL,
      PRIMARY KEY (pk),
      CONSTRAINT UNQ_mh_acl_episode_transition UNIQUE (episode_id, organization_id, application_date),
      CONSTRAINT FK_mh_acl_episode_transition_managed_acl_fk FOREIGN KEY (managed_acl_fk) REFERENCES mh_acl_managed_acl (pk)
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8;

    CREATE TABLE mh_acl_series_transition (
      pk BIGINT(20) NOT NULL,
      workflow_params VARCHAR(255) DEFAULT NULL,
      application_date DATETIME DEFAULT NULL,
      workflow_id VARCHAR(128) DEFAULT NULL,
      override TINYINT(1) DEFAULT 0,
      done TINYINT(1) DEFAULT 0,
      organization_id VARCHAR(128) DEFAULT NULL,
      series_id VARCHAR(128) DEFAULT NULL,
      managed_acl_fk BIGINT(20) DEFAULT NULL,
      PRIMARY KEY (pk),
      CONSTRAINT UNQ_mh_acl_series_transition UNIQUE (series_id, organization_id, application_date),
      CONSTRAINT FK_mh_acl_series_transition_managed_acl_fk FOREIGN KEY (managed_acl_fk) REFERENCES mh_acl_managed_acl (pk)
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8;

    CREATE TABLE mh_role (
      id bigint(20) NOT NULL,
      description varchar(255) DEFAULT NULL,
      name varchar(128) DEFAULT NULL,
      organization varchar(128) DEFAULT NULL,
      PRIMARY KEY (id),
      CONSTRAINT UNQ_mh_role UNIQUE (name, organization),
      CONSTRAINT FK_mh_role_organization FOREIGN KEY (organization) REFERENCES mh_organization (id) ON DELETE CASCADE
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8;

    CREATE TABLE mh_group (
      id bigint(20) NOT NULL,
      group_id varchar(128) DEFAULT NULL,
      description varchar(255) DEFAULT NULL,
      name varchar(128) DEFAULT NULL,
      role varchar(255) DEFAULT NULL,
      organization varchar(128) DEFAULT NULL,
      PRIMARY KEY (id),
      CONSTRAINT UNQ_mh_group UNIQUE (group_id, organization),
      CONSTRAINT FK_mh_group_organization FOREIGN KEY (organization) REFERENCES mh_organization (id)
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8;

    CREATE TABLE mh_group_member (
      group_id bigint(20) NOT NULL,
      member varchar(255) DEFAULT NULL
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8;

    CREATE TABLE mh_group_role (
      group_id bigint(20) NOT NULL,
      role_id bigint(20) NOT NULL,
      PRIMARY KEY (group_id,role_id),
      CONSTRAINT UNQ_mh_group_role UNIQUE (group_id, role_id),
      CONSTRAINT FK_mh_group_role_group_id FOREIGN KEY (group_id) REFERENCES mh_group (id),
      CONSTRAINT FK_mh_group_role_role_id FOREIGN KEY (role_id) REFERENCES mh_role (id)
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8;

    CREATE TABLE mh_user (
      id bigint(20) NOT NULL,
      username varchar(128) DEFAULT NULL,
      password text,
      name varchar(256) DEFAULT NULL,
      email varchar(256) DEFAULT NULL,
      organization varchar(128) DEFAULT NULL,
      manageable TINYINT(1) NOT NULL DEFAULT '1',
      PRIMARY KEY (id),
      CONSTRAINT UNQ_mh_user UNIQUE (username, organization),
      CONSTRAINT FK_mh_user_organization FOREIGN KEY (organization) REFERENCES mh_organization (id) ON DELETE CASCADE
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8;

    CREATE INDEX IX_mh_role_pk ON mh_role (name, organization);

    CREATE TABLE mh_user_role (
      user_id bigint(20) NOT NULL,
      role_id bigint(20) NOT NULL,
      PRIMARY KEY (user_id,role_id),
      CONSTRAINT UNQ_mh_user_role UNIQUE (user_id, role_id),
      CONSTRAINT FK_mh_user_role_role_id FOREIGN KEY (role_id) REFERENCES mh_role (id),
      CONSTRAINT FK_mh_user_role_user_id FOREIGN KEY (user_id) REFERENCES mh_user (id)
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8;

    CREATE TABLE mh_user_ref (
      id bigint(20) NOT NULL,
      username varchar(128) DEFAULT NULL,
      last_login datetime DEFAULT NULL,
      email varchar(255) DEFAULT NULL,
      name varchar(255) DEFAULT NULL,
      login_mechanism varchar(255) DEFAULT NULL,
      organization varchar(128) DEFAULT NULL,
      PRIMARY KEY (id),
      CONSTRAINT UNQ_mh_user_ref UNIQUE (username, organization),
      CONSTRAINT FK_mh_user_ref_organization FOREIGN KEY (organization) REFERENCES mh_organization (id)
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8;

    CREATE TABLE mh_user_ref_role (
      user_id bigint(20) NOT NULL,
      role_id bigint(20) NOT NULL,
      PRIMARY KEY (user_id, role_id),
      CONSTRAINT UNQ_mh_user_ref_role UNIQUE (user_id, role_id),
      CONSTRAINT FK_mh_user_ref_role_role_id FOREIGN KEY (role_id) REFERENCES mh_role (id),
      CONSTRAINT FK_mh_user_ref_role_user_id FOREIGN KEY (user_id) REFERENCES mh_user_ref (id)
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8;

    CREATE TABLE mh_user_settings (
      id bigint(20) NOT NULL,
      setting_key VARCHAR(255) NOT NULL,
      setting_value text NOT NULL,
      username varchar(128) NOT NULL,
      organization varchar(128) NOT NULL,
      PRIMARY KEY (id),
      CONSTRAINT UNQ_mh_user_settings UNIQUE (username, organization)
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8;

    CREATE TABLE mh_email_configuration (
      id BIGINT(20) NOT NULL,
      organization VARCHAR(128) NOT NULL,
      port INT(5) DEFAULT NULL,
      transport VARCHAR(255) DEFAULT NULL,
      username VARCHAR(255) DEFAULT NULL,
      server VARCHAR(255) NOT NULL,
      ssl_enabled TINYINT(1) NOT NULL DEFAULT '0',
      password VARCHAR(255) DEFAULT NULL,
      PRIMARY KEY (id),
      CONSTRAINT UNQ_mh_email_configuration UNIQUE (organization),
      CONSTRAINT FK_mh_email_configuration_organization FOREIGN KEY (organization) REFERENCES mh_organization (id) ON DELETE CASCADE
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8;

    CREATE INDEX IX_mh_email_configuration_organization ON mh_email_configuration (organization);

    CREATE TABLE mh_message_signature (
      id BIGINT(20) NOT NULL,
      organization VARCHAR(128) NOT NULL,
      name VARCHAR(255) NOT NULL,
      creation_date DATETIME NOT NULL,
      sender VARCHAR(255) NOT NULL,
      sender_name VARCHAR(255) NOT NULL,
      reply_to VARCHAR(255) DEFAULT NULL,
      reply_to_name VARCHAR(255) DEFAULT NULL,
      signature VARCHAR(255) NOT NULL,
      creator_username VARCHAR(255) NOT NULL,
      PRIMARY KEY (id),
      CONSTRAINT UNQ_mh_message_signature UNIQUE (organization, name),
      CONSTRAINT FK_mh_message_signature_organization FOREIGN KEY (organization) REFERENCES mh_organization (id) ON DELETE CASCADE
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8;

    CREATE INDEX IX_mh_message_signature_organization ON mh_message_signature (organization);
    CREATE INDEX IX_mh_message_signature_name ON mh_message_signature (name);

    CREATE TABLE mh_message_template (
      id BIGINT(20) NOT NULL,
      organization VARCHAR(128) NOT NULL,
      body TEXT(65535) NOT NULL,
      creation_date DATETIME NOT NULL,
      subject VARCHAR(255) NOT NULL,
      name VARCHAR(255) NOT NULL,
      template_type VARCHAR(255) DEFAULT NULL,
      creator_username VARCHAR(255) NOT NULL,
      hidden TINYINT(1) NOT NULL DEFAULT '0',
      PRIMARY KEY (id),
      CONSTRAINT UNQ_mh_message_template UNIQUE (organization, name),
      CONSTRAINT FK_mh_message_template_organization FOREIGN KEY (organization) REFERENCES mh_organization (id) ON DELETE CASCADE
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8;

    CREATE INDEX IX_mh_message_template_organization ON mh_message_template (organization);
    CREATE INDEX IX_mh_message_template_name ON mh_message_template (name);

    CREATE TABLE mh_event_comment (
      id BIGINT(20) NOT NULL,
      organization VARCHAR(128) NOT NULL,
      event VARCHAR(128) NOT NULL,
      creation_date DATETIME NOT NULL,
      author VARCHAR(255) NOT NULL,
      text TEXT(65535) NOT NULL,
      reason VARCHAR(255) DEFAULT NULL,
      modification_date DATETIME NOT NULL,
      resolved_status TINYINT(1) NOT NULL DEFAULT '0',
      PRIMARY KEY (id)
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8;

    CREATE TABLE mh_event_comment_reply (
      id BIGINT(20) NOT NULL,
      event_comment_id BIGINT(20) NOT NULL,
      creation_date DATETIME NOT NULL,
      author VARCHAR(255) NOT NULL,
      text TEXT(65535) NOT NULL,
      modification_date DATETIME NOT NULL,
      PRIMARY KEY (id),
      CONSTRAINT FK_mh_event_comment_reply_mh_event_comment FOREIGN KEY (event_comment_id) REFERENCES mh_event_comment (id)
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8;

    CREATE TABLE mh_series_elements (
      series VARCHAR(128) NOT NULL,
      organization VARCHAR(128) NOT NULL,
      type VARCHAR(128) NOT NULL,
      data BLOB,
      PRIMARY KEY (series, organization, type)
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8;

    CREATE TABLE mh_series_property (
      organization VARCHAR(128) NOT NULL,
      series VARCHAR(128) NOT NULL,
      name VARCHAR(255) NOT NULL,
      value TEXT(65535),
      PRIMARY KEY (organization, series, name),
      CONSTRAINT FK_mh_series_property_organization_series FOREIGN KEY (organization, series) REFERENCES mh_series (organization, id) ON DELETE CASCADE
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8;

    CREATE INDEX IX_mh_series_property_pk ON mh_series_property (series);

    CREATE TABLE mh_themes (
        id BIGINT(20) NOT NULL,
        organization VARCHAR(128) NOT NULL,
        creation_date DATETIME NOT NULL,
        username VARCHAR(128) NOT NULL,
        name VARCHAR(255) NOT NULL,
        isDefault tinyint(1) NOT NULL DEFAULT '0',
        description VARCHAR(255),
        bumper_active tinyint(1) NOT NULL DEFAULT '0',
        bumper_file VARCHAR(128),
        license_slide_active tinyint(1) NOT NULL DEFAULT '0',
        license_slide_background VARCHAR(128),
        license_slide_description VARCHAR(255),
        title_slide_active tinyint(1) NOT NULL DEFAULT '0',
        title_slide_background VARCHAR(128),
        title_slide_metadata VARCHAR(255),
        trailer_active tinyint(1) NOT NULL DEFAULT '0',
        trailer_file VARCHAR(128),
        watermark_active tinyint(1) NOT NULL DEFAULT '0',
        watermark_position VARCHAR(255),
        watermark_file VARCHAR(128),
        PRIMARY KEY (id),
        CONSTRAINT FK_mh_themes_organization FOREIGN KEY (organization) REFERENCES mh_organization (id) ON DELETE CASCADE
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8;

    CREATE TABLE mh_ibm_watson_transcript_job (
        id BIGINT(20) NOT NULL,
        media_package_id VARCHAR(128) NOT NULL,
        track_id VARCHAR(128) NOT NULL,
        job_id  VARCHAR(128) NOT NULL,
        date_created datetime NOT NULL,
        date_completed datetime DEFAULT NULL,
        status VARCHAR(128) DEFAULT NULL,
        track_duration BIGINT NOT NULL,
        PRIMARY KEY (id)
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8;

---

kind: ConfigMap
apiVersion: v1
metadata:
  name: opencast-config
  namespace: opencast
data:
  custom.properties-admin: |
    #########################################
    ### Opencast configuration properties ###
    #########################################

    # The internal URL of this Opencast installation, used to locate services running on this instance and for inter-node
    # communication in distributed setups.
    #
    # Note that while the server.url is the public url of this instance, there is the actual public url of an individual
    # tenant, which is configured in etc/load/org.opencastproject.organization-<tenant id>.cfg with the default tenant id
    # being "mh_default_org".
    #
    # Also note that if this felix installation is proxied behind an Apache HTTPD reverse proxy, and communication is meant
    # to go through that proxy, then server.url should point to the proxy's port (usually 80).
    # Related options (like listening addresses) are located in etc/org.ops4j.pax.web.cfg
    org.opencastproject.server.url=http://oc-admin.k8s.mtneug.de

    # The environment specified below will show up in the email subject when sending a notification about transcription
    # errors. Useful to differentiate among environments (dev, test, etc) and may be used by other services in the future.
    #org.opencastproject.environment.name=


    ######### USER/AUTHENTICATION #########

    # The username and password for a system administrator account. If both `user` and `pass` are set, Opencast will create
    # or update that user when started up. If it is commented out, nothing will happen.
    # WARNING: Commenting this out later or renaming the user will *not* remove already created user.
    org.opencastproject.security.admin.user=admin
    org.opencastproject.security.admin.pass=opencast
    org.opencastproject.security.admin.roles=ROLE_ADMIN,ROLE_OAUTH_USER

    # Email address of the server's admin.
    org.opencastproject.admin.email=admin@localhost

    # Optional custom roles which can used in ACLs and granted to users or groups (comma-separated list of role names)
    #org.opencastproject.security.custom.roles=ROLE_ONE, ROLE_TWO, ROLE_THREE

    # Optional custom roles pattern (regular expression). Roles matching this pattern can be added to ACLs.
    #org.opencastproject.security.custom.roles.pattern=^[0-9a-f-]+_(Learner|Instructor)$

    # The username and password to present to other Opencast servers when calling their REST endpoints.  The remote server
    # must contain matching values.
    org.opencastproject.security.digest.user=opencast_system_account
    org.opencastproject.security.digest.pass=CHANGE_ME

    # The number of times to retry a request if the nonce expires.
    #org.opencastproject.security.digest.nonce.retries=12

    # The configuration property specifying the minimum amount of time in seconds wait before retrying a request after
    # a nonce timeout. Default is 300 seconds (5 minutes).
    #org.opencastproject.security.digest.nonce.base.time=300

    # The maximum amount of time to wait in addition to the base time for a random generator to add after a nonce timeout
    # so that requests that timeout won't all try again at exactly the same time. Default is 300 seconds (5 minutes).
    #org.opencastproject.security.digest.nonce.variable.time=300


    ######### STORAGE #########

    # The directory where the system will store its processed files (including temporary files).  This directory should
    # be persistent between reboots (i.e., not /tmp)
    org.opencastproject.storage.dir=/data/opencast

    # The path to the asset manager directory
    # Default: ${org.opencastproject.storage.dir}/archive
    #org.opencastproject.episode.rootdir=${org.opencastproject.storage.dir}/archive

    # The path to the repository of files used during media processing.
    #org.opencastproject.file.repo.path=${org.opencastproject.storage.dir}/files

    # The path to the working files (recommend using fast, transient storage)
    org.opencastproject.workspace.rootdir=${org.opencastproject.storage.dir}/workspace

    # The location to store uploaded static files such as images and videos.
    org.opencastproject.staticfiles.rootdir=${org.opencastproject.storage.dir}/staticfiles

    # Location of the temporary directory to build zip archives.
    # Default: ${org.opencastproject.storage.dir}/tmp/zip
    #org.opencastproject.workflow.handler.workflow.ZipWorkflowOperationHandler.tmpdir=${org.opencastproject.storage.dir}/tmp/zip


    ######### STREAMING AND DOWNLOAD #########

    # The base URL of the streaming server (ususally "rtmp://<SERVER_URL>/matterhorn-engage").
    # ${org.opencastproject.server.url} can not be used, because the streaming server does not use the HTTP protocol.
    # Streaming is not included in the default workflow, since the Red5 streaming server is a 3rd party component that
    # requires separate installation.
    #org.opencastproject.streaming.url=rtmp://localhost/matterhorn-engage

    # The directory where Opencast stores the streams
    #org.opencastproject.streaming.directory=${org.opencastproject.storage.dir}/streams

    # The port to use for the streaming server, only used by a Wowza streaming server.
    #org.opencastproject.streaming.port=1935

    # Server URL for Adaptive Streaming, usually the same server like RTMP streaming with a different protocol
    #org.opencastproject.adaptive-streaming.url=http(s)://<wowza-server>/<wowza-application>

    # Port for Adaptive Streaming (for Wowza usually 1935)
    #org.opencastproject.adaptive-streaming.port=<port_number>

    # Some newer streaming server versions expect an "flv:" tag within the rtmp URL.
    # Not every RTMP-streaming server is compatible with this (i.e. nginx), so this
    # is the compatibility mode to the old syntax.
    # true  = without "flv:" tag - old syntax
    # false = with    "flv:" tag - new syntax
    #org.opencastproject.streaming.flvcompatibility=true

    # The base URL for media downloads.
    org.opencastproject.download.url=http://oc.k8s.mtneug.de/static

    # The directory to store media, metadata, and attachments for download from the engage tool
    org.opencastproject.download.directory=${org.opencastproject.storage.dir}/downloads


    ######### DATABASE #########

    # Relational Database configuration.  By default, Opencast uses an embedded H2 database.  A standalone database server
    # is recommended for production systems.  If you run the ddl script for your db vendor (see docs/scripts/ddl/) manually,
    # (this is recommended) set 'ddl-generation' to 'false'.
    org.opencastproject.db.ddl.generation=false

    # db.vendor can be any of the values listed at under the "eclipselink.target-database" section of
    # http://www.eclipse.org/eclipselink/documentation/2.4/jpa/extensions/p_target_database.htm#target-database
    # Common values include MySQL, PostgreSQL.
    org.opencastproject.db.vendor=MySQL

    # Opencast comes with the jdbc drivers for MySQL (com.mysql.jdbc.Driver) and PostgreSQL (org.postgresql.Driver). To add
    # other jdbcDrivers to the Opencast runtime, rebuild the matterhorn-db module with your desired drivers.
    org.opencastproject.db.jdbc.driver=com.mysql.jdbc.Driver

    # The jdbc connection url, username, and password
    org.opencastproject.db.jdbc.url=jdbc:mysql://mariadb:3306/opencast
    org.opencastproject.db.jdbc.user=opencast
    org.opencastproject.db.jdbc.pass=MARIADB_PW

    # The jdbc connection pool properties. See http://www.mchange.com/projects/c3p0/#basic_pool_configuration
    # max.idle.time should be lower than the database server idle connection timeout duration (wait_timeout for mysql)
    #org.opencastproject.db.jdbc.pool.max.size=15
    #org.opencastproject.db.jdbc.pool.min.size=3
    #org.opencastproject.db.jdbc.pool.acquire.increment=3
    #org.opencastproject.db.jdbc.pool.max.statements=0
    #org.opencastproject.db.jdbc.pool.login.timeout=1000
    #org.opencastproject.db.jdbc.pool.max.idle.time=3600
    #org.opencastproject.db.jdbc.pool.max.connection.age=0


    ######### Workspace Cleanup #########

    # The scheduled period in seconds, at which a workspace cleanup operation is performed.
    # 86400 seconds equals 24 hours.
    # Default value: -1 (Disable cleanup scheduler)
    org.opencastproject.workspace.cleanup.period=86400

    # The maximum age a file must reach in seconds before a deletion of the file in the workspace cleanup operation is
    # performed. 2592000 seconds equals 30 days.
    # Default value: -1 (max age will never be reached)
    org.opencastproject.workspace.cleanup.max.age=2592000


    ######### ACTIVE MQ BROKER #########

    # This configures the connection to the Active MQ broker so that we can send and receive messages.
    # There are many settings for specifying the broker url: http://activemq.apache.org/activemq-4-connection-uris.html
    # Including with failover support details here: http://activemq.apache.org/failover-transport-reference.html
    # Default (url): failover://(tcp://127.0.0.1:61616)?initialReconnectDelay=2000&maxReconnectAttempts=2
    # Default (username/password): None
    activemq.broker.url=failover:(tcp://activemq:61616)?initialReconnectDelay=2000
    activemq.broker.username=opencast
    activemq.broker.password=ACTIVEMQ_PW

    ######### Elastic Search #########

    # The directory where the configuration files for the Elasticsearch indices are located. This directory should
    # be persistent between reboots (i.e., not /tmp)
    org.opencastproject.elasticsearch.config.dir=${karaf.etc}/index


    ######### SOLR #########

    # Default directory to use for embedded solr indexes.
    # If not set, ${karaf.data}/solr-indexes will be used.
    org.opencastproject.solr.dir=/data/solr-indexes

    # Directory to store the embedded solr indices.  This should be a persistent and stable directory.
    # Default: ${org.opencastproject.solr.dir}/{search, series, workflow}
    #org.opencastproject.search.solr.dir=${org.opencastproject.solr.dir}/search
    #org.opencastproject.series.solr.dir=${org.opencastproject.solr.dir}/series
    #org.opencastproject.workflow.solr.dir=${org.opencastproject.solr.dir}/workflow

    # URLs of dedicated Solr server to use.  Note that if thesw URLs are specified, the local embedded Solr index as
    # configured using `org.opencastproject.*.solr.dir` will be ignored. A dedicated Solr server should be set up in order
    # to enable running multiple instances of the related service. Please consult http://lucene.apache.org/solr/ on how to
    # set up a standalone Solr server.
    #org.opencastproject.search.solr.url=http://localhost:8983/solr/
    #org.opencastproject.series.solr.url=http://localhost:8983/solr/
    #org.opencastproject.workflow.solr.url=http://localhost:8983/solr/


    ######### Service Registry & Jobs #########

    # The url of the remote service registry.  This is used in cases where there is no direct connection to the service
    # registry database such as capture agens running in protected environments. This is typically true for capture agents
    # and should be set to the url of a server running the actual implementation of the service registry and the path to
    # the service registry(admin, worker, etc. See the build profiles in pom.xml for a complete list).
    #org.opencastproject.serviceregistry.url=${org.opencastproject.server.url}/services

    # The base URL to use for publishing job locations. If left commented out, the local server URL will be used.  Set this
    # if you intend to support swapping servers with different IPs or host names.
    #org.opencastproject.jobs.url=${org.opencastproject.server.url}

    # Whether to accept a job whose load exceeds the host's max load
    # Default: true
    #org.opencastproject.job.load.acceptexceeding=true

    ######### Capture and Ingest #########

    # Timeout for capture agent status, in minutes.
    # Capture agents which have not sent status updates for this period will be marked as offline.
    # Default: 120 minutes (2 hours)
    #org.opencastproject.capture.admin.timeout=120

    # The ID of the default workflow definition to run when media are ingested
    #org.opencastproject.workflow.default.definition=ng-schedule-and-upload

    # The max number of ingests to allow at the same time. If more ingests try than the max they will receive service
    # unavailable. A value of 0 means that the server will accept all ingests.
    # Default: 0
    #org.opencastproject.ingest.max.concurrent=0

    # The maximum number of concurrent files to ingest from the inbox directory
    # Default: 1
    #org.opencastproject.inbox.threads=1

    ######### Third-party Binaries #########

    # Path to the ffmpeg binary. Its name is sufficient if the binary is in the
    # system path (default: ffmpeg)
    #org.opencastproject.composer.ffmpeg.path=/opt/ffmpeg/ffmpeg

    # Path to the ffprobe binary. Its name is sufficient if the binary is in the
    # system path (default: ffprobe)
    #org.opencastproject.inspection.ffprobe.path=/opt/ffmpeg/ffprobe

    # Path to the tesseract binary used by the text analyzer. Its name is
    # sufficient if the binary is in the system path (default: tesseract)
    #org.opencastproject.textanalyzer.tesseract.path=/opt/tesseract/tesseract

    # Additional options for Tesseract like language or page segmentation mode.
    # The default are no additional options.
    #org.opencastproject.textanalyzer.tesseract.options=-l eng -psm 3

    # Path to the hunspell binary used by the matterhorn-dictionary-hunspell
    # module. The default ist just "hunspell" which requires hunspell to be in the
    # search path.
    #org.opencastproject.dictionary.hunspell.binary=/opt/hunspell/hunspell

    # Command to use for filtering text by the matterhorn-dictionary-hunspell
    # module. The command is appended to the hunspell binary path. It should filter
    # the text from stdin and print the recognized words to stdout. Usually this
    # should be a combination of "-G" and a list of dictionaries. The default is to
    # use "-d de_DE,en_GB,en_US -G".
    #org.opencastproject.dictionary.hunspell.command=-i utf-8 -d de_DE,en_GB,en_US -G

    # The path for SoX command line used by audio normalization
    #org.opencastproject.sox.path=/opt/sox/sox

    ######### Test Data #########

    # Whether opencast should import test-data by the given csv file path.
    # Default: false
    #org.opencastproject.dataloader.testdata=false

    # The path to the CSV file to import the data from it
    org.opencastproject.dataloader.csv=${karaf.etc}/dataimport


    ######### Static Files #########

    # True means to use a webserver to serve the static files but this will not secure
    # any of the files using user or organization security. If false it uses
    # Opencast endpoints to serve and secure the files.
    #org.opencastproject.staticfiles.webserver.enabled=false

    # The url to the location where the webserver serves the static file uploads from. It will add the organization and uuid
    # for the uploaded static file. If not set Opencast uses endpoints to serve and secure the files.
    #org.opencastproject.staticfiles.webserver.url=${org.opencastproject.server.url}/staticfiles/

    # This is the maximum allowable size in bytes for a file to be uploaded. If the property is missing or set to 0 it is
    # disabled.
    # Default is 1000000000 which is 1GB.
    #org.opencastproject.staticfiles.upload.max.size=1000000000


    ######### User Directory #########

    # The size of the user directory cache.
    # Default: 200
    #org.opencastproject.userdirectory.cache.size=200

    # The expiry time of entries in the user directory cache, in minutes
    # Default: 1 minute
    #org.opencastproject.userdirectory.cache.expiry=1


    ######### KARAF CONFIGURATION #########

    # The place for Karaf to put the lock file ensuring that Opencast is not run twice at the same time.
    karaf.lock.dir=${karaf.data}

    # Setting or deactivating the remote shutdown port in Apache Karaf. Commenting this out will make Karaf listen to a
    # random shutdown port on localhost, announcing it via ${karaf.shutdown.port.file}. Setting this to -1 will deactivate
    # the shutdown port. Note that the stop script is based on this and will not work any longer if the port is deactivated.
    #karaf.shutdown.port=-1

    # Specifies the location of the port file for Opencast. It is used by the shutdown script to send the shutdown command
    # to the main process.
    karaf.shutdown.port.file=${karaf.data}/port

    # Command for shutting down Opencast. If the shutdown port is enabled, Opencast will listen for this command to initiate
    # the shut down procedure.
    # Change this to something secret
    karaf.shutdown.command=D9B2D523-1CE2-4AA0-A2A9-950BC8B64579

    # Specifies the location of the PID file for Opencast. It is used by the shutdown script to synchronously shut down
    # Opencast as it will wait for the process with the given process id. Removing this will cause the network port to be
    # used as fallback.
    karaf.pid.file=${karaf.data}/pid


    ######### Miscellaneous #########

    # Send server configuration data to the Opencast project to help us track how people are using Opencast.  No security
    # related information will be sent to the opencast project.  Comment this out to disable this feature.
    #org.opencastproject.anonymous.feedback.url=http://opencast.org/form/tracking

    # The mount point of the OAI-PMH servlet.
    # Please make sure that the path configured is accessible without any login (see security.xml)
    # This setting is configured here and not in the OAI-PMH server's config since it is shared amongst several
    # OAI-PMH related components.
    #org.opencastproject.oaipmh.mountpoint=/oaipmh

    # This changes the number of seconds from when an internal request is made until a signed URL will expire. More
    # specifically, the HTTP client needs access to internal storage areas such as the working file repository as well as to
    # distributed artifacts on the downloads and streaming servers, all of which are protected by verification components.
    # Default is 60 seconds as it shouldn't take longer than that to make a request to a server. This will have no impact on
    # a system where url signing is not configured. For more information please see:
    # http://docs.opencast.org/latest/admin/configuration/stream-security/#configuration-of-url-signing-timeout-values
    #org.opencastproject.security.internal.url.signing.duration=60

  custom.properties-presentation: |
    #########################################
    ### Opencast configuration properties ###
    #########################################

    # The internal URL of this Opencast installation, used to locate services running on this instance and for inter-node
    # communication in distributed setups.
    #
    # Note that while the server.url is the public url of this instance, there is the actual public url of an individual
    # tenant, which is configured in etc/load/org.opencastproject.organization-<tenant id>.cfg with the default tenant id
    # being "mh_default_org".
    #
    # Also note that if this felix installation is proxied behind an Apache HTTPD reverse proxy, and communication is meant
    # to go through that proxy, then server.url should point to the proxy's port (usually 80).
    # Related options (like listening addresses) are located in etc/org.ops4j.pax.web.cfg
    org.opencastproject.server.url=http://oc.k8s.mtneug.de

    # The environment specified below will show up in the email subject when sending a notification about transcription
    # errors. Useful to differentiate among environments (dev, test, etc) and may be used by other services in the future.
    #org.opencastproject.environment.name=


    ######### USER/AUTHENTICATION #########

    # The username and password for a system administrator account. If both `user` and `pass` are set, Opencast will create
    # or update that user when started up. If it is commented out, nothing will happen.
    # WARNING: Commenting this out later or renaming the user will *not* remove already created user.
    org.opencastproject.security.admin.user=admin
    org.opencastproject.security.admin.pass=opencast
    org.opencastproject.security.admin.roles=ROLE_ADMIN,ROLE_OAUTH_USER

    # Email address of the server's admin.
    org.opencastproject.admin.email=admin@localhost

    # Optional custom roles which can used in ACLs and granted to users or groups (comma-separated list of role names)
    #org.opencastproject.security.custom.roles=ROLE_ONE, ROLE_TWO, ROLE_THREE

    # Optional custom roles pattern (regular expression). Roles matching this pattern can be added to ACLs.
    #org.opencastproject.security.custom.roles.pattern=^[0-9a-f-]+_(Learner|Instructor)$

    # The username and password to present to other Opencast servers when calling their REST endpoints.  The remote server
    # must contain matching values.
    org.opencastproject.security.digest.user=opencast_system_account
    org.opencastproject.security.digest.pass=CHANGE_ME

    # The number of times to retry a request if the nonce expires.
    #org.opencastproject.security.digest.nonce.retries=12

    # The configuration property specifying the minimum amount of time in seconds wait before retrying a request after
    # a nonce timeout. Default is 300 seconds (5 minutes).
    #org.opencastproject.security.digest.nonce.base.time=300

    # The maximum amount of time to wait in addition to the base time for a random generator to add after a nonce timeout
    # so that requests that timeout won't all try again at exactly the same time. Default is 300 seconds (5 minutes).
    #org.opencastproject.security.digest.nonce.variable.time=300


    ######### STORAGE #########

    # The directory where the system will store its processed files (including temporary files).  This directory should
    # be persistent between reboots (i.e., not /tmp)
    org.opencastproject.storage.dir=/data/opencast

    # The path to the asset manager directory
    # Default: ${org.opencastproject.storage.dir}/archive
    #org.opencastproject.episode.rootdir=${org.opencastproject.storage.dir}/archive

    # The path to the repository of files used during media processing.
    #org.opencastproject.file.repo.path=${org.opencastproject.storage.dir}/files

    # The path to the working files (recommend using fast, transient storage)
    org.opencastproject.workspace.rootdir=${org.opencastproject.storage.dir}/workspace

    # The location to store uploaded static files such as images and videos.
    org.opencastproject.staticfiles.rootdir=${org.opencastproject.storage.dir}/staticfiles

    # Location of the temporary directory to build zip archives.
    # Default: ${org.opencastproject.storage.dir}/tmp/zip
    #org.opencastproject.workflow.handler.workflow.ZipWorkflowOperationHandler.tmpdir=${org.opencastproject.storage.dir}/tmp/zip


    ######### STREAMING AND DOWNLOAD #########

    # The base URL of the streaming server (ususally "rtmp://<SERVER_URL>/matterhorn-engage").
    # ${org.opencastproject.server.url} can not be used, because the streaming server does not use the HTTP protocol.
    # Streaming is not included in the default workflow, since the Red5 streaming server is a 3rd party component that
    # requires separate installation.
    #org.opencastproject.streaming.url=rtmp://localhost/matterhorn-engage

    # The directory where Opencast stores the streams
    #org.opencastproject.streaming.directory=${org.opencastproject.storage.dir}/streams

    # The port to use for the streaming server, only used by a Wowza streaming server.
    #org.opencastproject.streaming.port=1935

    # Server URL for Adaptive Streaming, usually the same server like RTMP streaming with a different protocol
    #org.opencastproject.adaptive-streaming.url=http(s)://<wowza-server>/<wowza-application>

    # Port for Adaptive Streaming (for Wowza usually 1935)
    #org.opencastproject.adaptive-streaming.port=<port_number>

    # Some newer streaming server versions expect an "flv:" tag within the rtmp URL.
    # Not every RTMP-streaming server is compatible with this (i.e. nginx), so this
    # is the compatibility mode to the old syntax.
    # true  = without "flv:" tag - old syntax
    # false = with    "flv:" tag - new syntax
    #org.opencastproject.streaming.flvcompatibility=true

    # The base URL for media downloads.
    org.opencastproject.download.url=http://oc.k8s.mtneug.de/static

    # The directory to store media, metadata, and attachments for download from the engage tool
    org.opencastproject.download.directory=${org.opencastproject.storage.dir}/downloads


    ######### DATABASE #########

    # Relational Database configuration.  By default, Opencast uses an embedded H2 database.  A standalone database server
    # is recommended for production systems.  If you run the ddl script for your db vendor (see docs/scripts/ddl/) manually,
    # (this is recommended) set 'ddl-generation' to 'false'.
    org.opencastproject.db.ddl.generation=false

    # db.vendor can be any of the values listed at under the "eclipselink.target-database" section of
    # http://www.eclipse.org/eclipselink/documentation/2.4/jpa/extensions/p_target_database.htm#target-database
    # Common values include MySQL, PostgreSQL.
    org.opencastproject.db.vendor=MySQL

    # Opencast comes with the jdbc drivers for MySQL (com.mysql.jdbc.Driver) and PostgreSQL (org.postgresql.Driver). To add
    # other jdbcDrivers to the Opencast runtime, rebuild the matterhorn-db module with your desired drivers.
    org.opencastproject.db.jdbc.driver=com.mysql.jdbc.Driver

    # The jdbc connection url, username, and password
    org.opencastproject.db.jdbc.url=jdbc:mysql://mariadb:3306/opencast
    org.opencastproject.db.jdbc.user=opencast
    org.opencastproject.db.jdbc.pass=MARIADB_PW

    # The jdbc connection pool properties. See http://www.mchange.com/projects/c3p0/#basic_pool_configuration
    # max.idle.time should be lower than the database server idle connection timeout duration (wait_timeout for mysql)
    #org.opencastproject.db.jdbc.pool.max.size=15
    #org.opencastproject.db.jdbc.pool.min.size=3
    #org.opencastproject.db.jdbc.pool.acquire.increment=3
    #org.opencastproject.db.jdbc.pool.max.statements=0
    #org.opencastproject.db.jdbc.pool.login.timeout=1000
    #org.opencastproject.db.jdbc.pool.max.idle.time=3600
    #org.opencastproject.db.jdbc.pool.max.connection.age=0


    ######### Workspace Cleanup #########

    # The scheduled period in seconds, at which a workspace cleanup operation is performed.
    # 86400 seconds equals 24 hours.
    # Default value: -1 (Disable cleanup scheduler)
    org.opencastproject.workspace.cleanup.period=86400

    # The maximum age a file must reach in seconds before a deletion of the file in the workspace cleanup operation is
    # performed. 2592000 seconds equals 30 days.
    # Default value: -1 (max age will never be reached)
    org.opencastproject.workspace.cleanup.max.age=2592000


    ######### ACTIVE MQ BROKER #########

    # This configures the connection to the Active MQ broker so that we can send and receive messages.
    # There are many settings for specifying the broker url: http://activemq.apache.org/activemq-4-connection-uris.html
    # Including with failover support details here: http://activemq.apache.org/failover-transport-reference.html
    # Default (url): failover://(tcp://127.0.0.1:61616)?initialReconnectDelay=2000&maxReconnectAttempts=2
    # Default (username/password): None
    activemq.broker.url=failover:(tcp://activemq:61616)?initialReconnectDelay=2000
    activemq.broker.username=opencast
    activemq.broker.password=ACTIVEMQ_PW

    ######### Elastic Search #########

    # The directory where the configuration files for the Elasticsearch indices are located. This directory should
    # be persistent between reboots (i.e., not /tmp)
    org.opencastproject.elasticsearch.config.dir=${karaf.etc}/index


    ######### SOLR #########

    # Default directory to use for embedded solr indexes.
    # If not set, ${karaf.data}/solr-indexes will be used.
    org.opencastproject.solr.dir=/data/solr-indexes

    # Directory to store the embedded solr indices.  This should be a persistent and stable directory.
    # Default: ${org.opencastproject.solr.dir}/{search, series, workflow}
    #org.opencastproject.search.solr.dir=${org.opencastproject.solr.dir}/search
    #org.opencastproject.series.solr.dir=${org.opencastproject.solr.dir}/series
    #org.opencastproject.workflow.solr.dir=${org.opencastproject.solr.dir}/workflow

    # URLs of dedicated Solr server to use.  Note that if thesw URLs are specified, the local embedded Solr index as
    # configured using `org.opencastproject.*.solr.dir` will be ignored. A dedicated Solr server should be set up in order
    # to enable running multiple instances of the related service. Please consult http://lucene.apache.org/solr/ on how to
    # set up a standalone Solr server.
    #org.opencastproject.search.solr.url=http://localhost:8983/solr/
    #org.opencastproject.series.solr.url=http://localhost:8983/solr/
    #org.opencastproject.workflow.solr.url=http://localhost:8983/solr/


    ######### Service Registry & Jobs #########

    # The url of the remote service registry.  This is used in cases where there is no direct connection to the service
    # registry database such as capture agens running in protected environments. This is typically true for capture agents
    # and should be set to the url of a server running the actual implementation of the service registry and the path to
    # the service registry(admin, worker, etc. See the build profiles in pom.xml for a complete list).
    #org.opencastproject.serviceregistry.url=${org.opencastproject.server.url}/services

    # The base URL to use for publishing job locations. If left commented out, the local server URL will be used.  Set this
    # if you intend to support swapping servers with different IPs or host names.
    #org.opencastproject.jobs.url=${org.opencastproject.server.url}

    # Whether to accept a job whose load exceeds the host's max load
    # Default: true
    #org.opencastproject.job.load.acceptexceeding=true

    ######### Capture and Ingest #########

    # Timeout for capture agent status, in minutes.
    # Capture agents which have not sent status updates for this period will be marked as offline.
    # Default: 120 minutes (2 hours)
    #org.opencastproject.capture.admin.timeout=120

    # The ID of the default workflow definition to run when media are ingested
    #org.opencastproject.workflow.default.definition=ng-schedule-and-upload

    # The max number of ingests to allow at the same time. If more ingests try than the max they will receive service
    # unavailable. A value of 0 means that the server will accept all ingests.
    # Default: 0
    #org.opencastproject.ingest.max.concurrent=0

    # The maximum number of concurrent files to ingest from the inbox directory
    # Default: 1
    #org.opencastproject.inbox.threads=1

    ######### Third-party Binaries #########

    # Path to the ffmpeg binary. Its name is sufficient if the binary is in the
    # system path (default: ffmpeg)
    #org.opencastproject.composer.ffmpeg.path=/opt/ffmpeg/ffmpeg

    # Path to the ffprobe binary. Its name is sufficient if the binary is in the
    # system path (default: ffprobe)
    #org.opencastproject.inspection.ffprobe.path=/opt/ffmpeg/ffprobe

    # Path to the tesseract binary used by the text analyzer. Its name is
    # sufficient if the binary is in the system path (default: tesseract)
    #org.opencastproject.textanalyzer.tesseract.path=/opt/tesseract/tesseract

    # Additional options for Tesseract like language or page segmentation mode.
    # The default are no additional options.
    #org.opencastproject.textanalyzer.tesseract.options=-l eng -psm 3

    # Path to the hunspell binary used by the matterhorn-dictionary-hunspell
    # module. The default ist just "hunspell" which requires hunspell to be in the
    # search path.
    #org.opencastproject.dictionary.hunspell.binary=/opt/hunspell/hunspell

    # Command to use for filtering text by the matterhorn-dictionary-hunspell
    # module. The command is appended to the hunspell binary path. It should filter
    # the text from stdin and print the recognized words to stdout. Usually this
    # should be a combination of "-G" and a list of dictionaries. The default is to
    # use "-d de_DE,en_GB,en_US -G".
    #org.opencastproject.dictionary.hunspell.command=-i utf-8 -d de_DE,en_GB,en_US -G

    # The path for SoX command line used by audio normalization
    #org.opencastproject.sox.path=/opt/sox/sox

    ######### Test Data #########

    # Whether opencast should import test-data by the given csv file path.
    # Default: false
    #org.opencastproject.dataloader.testdata=false

    # The path to the CSV file to import the data from it
    org.opencastproject.dataloader.csv=${karaf.etc}/dataimport


    ######### Static Files #########

    # True means to use a webserver to serve the static files but this will not secure
    # any of the files using user or organization security. If false it uses
    # Opencast endpoints to serve and secure the files.
    #org.opencastproject.staticfiles.webserver.enabled=false

    # The url to the location where the webserver serves the static file uploads from. It will add the organization and uuid
    # for the uploaded static file. If not set Opencast uses endpoints to serve and secure the files.
    #org.opencastproject.staticfiles.webserver.url=${org.opencastproject.server.url}/staticfiles/

    # This is the maximum allowable size in bytes for a file to be uploaded. If the property is missing or set to 0 it is
    # disabled.
    # Default is 1000000000 which is 1GB.
    #org.opencastproject.staticfiles.upload.max.size=1000000000


    ######### User Directory #########

    # The size of the user directory cache.
    # Default: 200
    #org.opencastproject.userdirectory.cache.size=200

    # The expiry time of entries in the user directory cache, in minutes
    # Default: 1 minute
    #org.opencastproject.userdirectory.cache.expiry=1


    ######### KARAF CONFIGURATION #########

    # The place for Karaf to put the lock file ensuring that Opencast is not run twice at the same time.
    karaf.lock.dir=${karaf.data}

    # Setting or deactivating the remote shutdown port in Apache Karaf. Commenting this out will make Karaf listen to a
    # random shutdown port on localhost, announcing it via ${karaf.shutdown.port.file}. Setting this to -1 will deactivate
    # the shutdown port. Note that the stop script is based on this and will not work any longer if the port is deactivated.
    #karaf.shutdown.port=-1

    # Specifies the location of the port file for Opencast. It is used by the shutdown script to send the shutdown command
    # to the main process.
    karaf.shutdown.port.file=${karaf.data}/port

    # Command for shutting down Opencast. If the shutdown port is enabled, Opencast will listen for this command to initiate
    # the shut down procedure.
    # Change this to something secret
    karaf.shutdown.command=410F47AA-BE2D-456E-8040-013A899CD8DA

    # Specifies the location of the PID file for Opencast. It is used by the shutdown script to synchronously shut down
    # Opencast as it will wait for the process with the given process id. Removing this will cause the network port to be
    # used as fallback.
    karaf.pid.file=${karaf.data}/pid


    ######### Miscellaneous #########

    # Send server configuration data to the Opencast project to help us track how people are using Opencast.  No security
    # related information will be sent to the opencast project.  Comment this out to disable this feature.
    #org.opencastproject.anonymous.feedback.url=http://opencast.org/form/tracking

    # The mount point of the OAI-PMH servlet.
    # Please make sure that the path configured is accessible without any login (see security.xml)
    # This setting is configured here and not in the OAI-PMH server's config since it is shared amongst several
    # OAI-PMH related components.
    #org.opencastproject.oaipmh.mountpoint=/oaipmh

    # This changes the number of seconds from when an internal request is made until a signed URL will expire. More
    # specifically, the HTTP client needs access to internal storage areas such as the working file repository as well as to
    # distributed artifacts on the downloads and streaming servers, all of which are protected by verification components.
    # Default is 60 seconds as it shouldn't take longer than that to make a request to a server. This will have no impact on
    # a system where url signing is not configured. For more information please see:
    # http://docs.opencast.org/latest/admin/configuration/stream-security/#configuration-of-url-signing-timeout-values
    #org.opencastproject.security.internal.url.signing.duration=60

  custom.properties-worker: |
    #########################################
    ### Opencast configuration properties ###
    #########################################

    # The internal URL of this Opencast installation, used to locate services running on this instance and for inter-node
    # communication in distributed setups.
    #
    # Note that while the server.url is the public url of this instance, there is the actual public url of an individual
    # tenant, which is configured in etc/load/org.opencastproject.organization-<tenant id>.cfg with the default tenant id
    # being "mh_default_org".
    #
    # Also note that if this felix installation is proxied behind an Apache HTTPD reverse proxy, and communication is meant
    # to go through that proxy, then server.url should point to the proxy's port (usually 80).
    # Related options (like listening addresses) are located in etc/org.ops4j.pax.web.cfg
    #
    # NOTE: ORG_OPENCASTPROJECT_SERVER_URL is replaced by http://<container's FQHN>:8080
    org.opencastproject.server.url={{ORG_OPENCASTPROJECT_SERVER_URL}}

    # The environment specified below will show up in the email subject when sending a notification about transcription
    # errors. Useful to differentiate among environments (dev, test, etc) and may be used by other services in the future.
    #org.opencastproject.environment.name=


    ######### USER/AUTHENTICATION #########

    # The username and password for a system administrator account. If both `user` and `pass` are set, Opencast will create
    # or update that user when started up. If it is commented out, nothing will happen.
    # WARNING: Commenting this out later or renaming the user will *not* remove already created user.
    org.opencastproject.security.admin.user=admin
    org.opencastproject.security.admin.pass=opencast
    org.opencastproject.security.admin.roles=ROLE_ADMIN,ROLE_OAUTH_USER

    # Email address of the server's admin.
    org.opencastproject.admin.email=admin@localhost

    # Optional custom roles which can used in ACLs and granted to users or groups (comma-separated list of role names)
    #org.opencastproject.security.custom.roles=ROLE_ONE, ROLE_TWO, ROLE_THREE

    # Optional custom roles pattern (regular expression). Roles matching this pattern can be added to ACLs.
    #org.opencastproject.security.custom.roles.pattern=^[0-9a-f-]+_(Learner|Instructor)$

    # The username and password to present to other Opencast servers when calling their REST endpoints.  The remote server
    # must contain matching values.
    org.opencastproject.security.digest.user=opencast_system_account
    org.opencastproject.security.digest.pass=CHANGE_ME

    # The number of times to retry a request if the nonce expires.
    #org.opencastproject.security.digest.nonce.retries=12

    # The configuration property specifying the minimum amount of time in seconds wait before retrying a request after
    # a nonce timeout. Default is 300 seconds (5 minutes).
    #org.opencastproject.security.digest.nonce.base.time=300

    # The maximum amount of time to wait in addition to the base time for a random generator to add after a nonce timeout
    # so that requests that timeout won't all try again at exactly the same time. Default is 300 seconds (5 minutes).
    #org.opencastproject.security.digest.nonce.variable.time=300


    ######### STORAGE #########

    # The directory where the system will store its processed files (including temporary files).  This directory should
    # be persistent between reboots (i.e., not /tmp)
    org.opencastproject.storage.dir=/data/opencast

    # The path to the asset manager directory
    # Default: ${org.opencastproject.storage.dir}/archive
    #org.opencastproject.episode.rootdir=${org.opencastproject.storage.dir}/archive

    # The path to the repository of files used during media processing.
    #org.opencastproject.file.repo.path=${org.opencastproject.storage.dir}/files

    # The path to the working files (recommend using fast, transient storage)
    org.opencastproject.workspace.rootdir=${org.opencastproject.storage.dir}/workspace

    # The location to store uploaded static files such as images and videos.
    org.opencastproject.staticfiles.rootdir=${org.opencastproject.storage.dir}/staticfiles

    # Location of the temporary directory to build zip archives.
    # Default: ${org.opencastproject.storage.dir}/tmp/zip
    #org.opencastproject.workflow.handler.workflow.ZipWorkflowOperationHandler.tmpdir=${org.opencastproject.storage.dir}/tmp/zip


    ######### STREAMING AND DOWNLOAD #########

    # The base URL of the streaming server (ususally "rtmp://<SERVER_URL>/matterhorn-engage").
    # ${org.opencastproject.server.url} can not be used, because the streaming server does not use the HTTP protocol.
    # Streaming is not included in the default workflow, since the Red5 streaming server is a 3rd party component that
    # requires separate installation.
    #org.opencastproject.streaming.url=rtmp://localhost/matterhorn-engage

    # The directory where Opencast stores the streams
    #org.opencastproject.streaming.directory=${org.opencastproject.storage.dir}/streams

    # The port to use for the streaming server, only used by a Wowza streaming server.
    #org.opencastproject.streaming.port=1935

    # Server URL for Adaptive Streaming, usually the same server like RTMP streaming with a different protocol
    #org.opencastproject.adaptive-streaming.url=http(s)://<wowza-server>/<wowza-application>

    # Port for Adaptive Streaming (for Wowza usually 1935)
    #org.opencastproject.adaptive-streaming.port=<port_number>

    # Some newer streaming server versions expect an "flv:" tag within the rtmp URL.
    # Not every RTMP-streaming server is compatible with this (i.e. nginx), so this
    # is the compatibility mode to the old syntax.
    # true  = without "flv:" tag - old syntax
    # false = with    "flv:" tag - new syntax
    #org.opencastproject.streaming.flvcompatibility=true

    # The base URL for media downloads.
    org.opencastproject.download.url=http://oc.k8s.mtneug.de/static

    # The directory to store media, metadata, and attachments for download from the engage tool
    org.opencastproject.download.directory=${org.opencastproject.storage.dir}/downloads


    ######### DATABASE #########

    # Relational Database configuration.  By default, Opencast uses an embedded H2 database.  A standalone database server
    # is recommended for production systems.  If you run the ddl script for your db vendor (see docs/scripts/ddl/) manually,
    # (this is recommended) set 'ddl-generation' to 'false'.
    org.opencastproject.db.ddl.generation=false

    # db.vendor can be any of the values listed at under the "eclipselink.target-database" section of
    # http://www.eclipse.org/eclipselink/documentation/2.4/jpa/extensions/p_target_database.htm#target-database
    # Common values include MySQL, PostgreSQL.
    org.opencastproject.db.vendor=MySQL

    # Opencast comes with the jdbc drivers for MySQL (com.mysql.jdbc.Driver) and PostgreSQL (org.postgresql.Driver). To add
    # other jdbcDrivers to the Opencast runtime, rebuild the matterhorn-db module with your desired drivers.
    org.opencastproject.db.jdbc.driver=com.mysql.jdbc.Driver

    # The jdbc connection url, username, and password
    org.opencastproject.db.jdbc.url=jdbc:mysql://mariadb:3306/opencast
    org.opencastproject.db.jdbc.user=opencast
    org.opencastproject.db.jdbc.pass=MARIADB_PW

    # The jdbc connection pool properties. See http://www.mchange.com/projects/c3p0/#basic_pool_configuration
    # max.idle.time should be lower than the database server idle connection timeout duration (wait_timeout for mysql)
    #org.opencastproject.db.jdbc.pool.max.size=15
    #org.opencastproject.db.jdbc.pool.min.size=3
    #org.opencastproject.db.jdbc.pool.acquire.increment=3
    #org.opencastproject.db.jdbc.pool.max.statements=0
    #org.opencastproject.db.jdbc.pool.login.timeout=1000
    #org.opencastproject.db.jdbc.pool.max.idle.time=3600
    #org.opencastproject.db.jdbc.pool.max.connection.age=0


    ######### Workspace Cleanup #########

    # The scheduled period in seconds, at which a workspace cleanup operation is performed.
    # 86400 seconds equals 24 hours.
    # Default value: -1 (Disable cleanup scheduler)
    org.opencastproject.workspace.cleanup.period=86400

    # The maximum age a file must reach in seconds before a deletion of the file in the workspace cleanup operation is
    # performed. 2592000 seconds equals 30 days.
    # Default value: -1 (max age will never be reached)
    org.opencastproject.workspace.cleanup.max.age=2592000


    ######### ACTIVE MQ BROKER #########

    # This configures the connection to the Active MQ broker so that we can send and receive messages.
    # There are many settings for specifying the broker url: http://activemq.apache.org/activemq-4-connection-uris.html
    # Including with failover support details here: http://activemq.apache.org/failover-transport-reference.html
    # Default (url): failover://(tcp://127.0.0.1:61616)?initialReconnectDelay=2000&maxReconnectAttempts=2
    # Default (username/password): None
    activemq.broker.url=failover:(tcp://activemq:61616)?initialReconnectDelay=2000
    activemq.broker.username=opencast
    activemq.broker.password=ACTIVEMQ_PW

    ######### Elastic Search #########

    # The directory where the configuration files for the Elasticsearch indices are located. This directory should
    # be persistent between reboots (i.e., not /tmp)
    org.opencastproject.elasticsearch.config.dir=${karaf.etc}/index


    ######### SOLR #########

    # Default directory to use for embedded solr indexes.
    # If not set, ${karaf.data}/solr-indexes will be used.
    org.opencastproject.solr.dir=/data/solr-indexes

    # Directory to store the embedded solr indices.  This should be a persistent and stable directory.
    # Default: ${org.opencastproject.solr.dir}/{search, series, workflow}
    #org.opencastproject.search.solr.dir=${org.opencastproject.solr.dir}/search
    #org.opencastproject.series.solr.dir=${org.opencastproject.solr.dir}/series
    #org.opencastproject.workflow.solr.dir=${org.opencastproject.solr.dir}/workflow

    # URLs of dedicated Solr server to use.  Note that if thesw URLs are specified, the local embedded Solr index as
    # configured using `org.opencastproject.*.solr.dir` will be ignored. A dedicated Solr server should be set up in order
    # to enable running multiple instances of the related service. Please consult http://lucene.apache.org/solr/ on how to
    # set up a standalone Solr server.
    #org.opencastproject.search.solr.url=http://localhost:8983/solr/
    #org.opencastproject.series.solr.url=http://localhost:8983/solr/
    #org.opencastproject.workflow.solr.url=http://localhost:8983/solr/


    ######### Service Registry & Jobs #########

    # The url of the remote service registry.  This is used in cases where there is no direct connection to the service
    # registry database such as capture agens running in protected environments. This is typically true for capture agents
    # and should be set to the url of a server running the actual implementation of the service registry and the path to
    # the service registry(admin, worker, etc. See the build profiles in pom.xml for a complete list).
    #org.opencastproject.serviceregistry.url=${org.opencastproject.server.url}/services

    # The base URL to use for publishing job locations. If left commented out, the local server URL will be used.  Set this
    # if you intend to support swapping servers with different IPs or host names.
    #org.opencastproject.jobs.url=${org.opencastproject.server.url}

    # Whether to accept a job whose load exceeds the host's max load
    # Default: true
    #org.opencastproject.job.load.acceptexceeding=true

    ######### Capture and Ingest #########

    # Timeout for capture agent status, in minutes.
    # Capture agents which have not sent status updates for this period will be marked as offline.
    # Default: 120 minutes (2 hours)
    #org.opencastproject.capture.admin.timeout=120

    # The ID of the default workflow definition to run when media are ingested
    #org.opencastproject.workflow.default.definition=ng-schedule-and-upload

    # The max number of ingests to allow at the same time. If more ingests try than the max they will receive service
    # unavailable. A value of 0 means that the server will accept all ingests.
    # Default: 0
    #org.opencastproject.ingest.max.concurrent=0

    # The maximum number of concurrent files to ingest from the inbox directory
    # Default: 1
    #org.opencastproject.inbox.threads=1

    ######### Third-party Binaries #########

    # Path to the ffmpeg binary. Its name is sufficient if the binary is in the
    # system path (default: ffmpeg)
    #org.opencastproject.composer.ffmpeg.path=/opt/ffmpeg/ffmpeg

    # Path to the ffprobe binary. Its name is sufficient if the binary is in the
    # system path (default: ffprobe)
    #org.opencastproject.inspection.ffprobe.path=/opt/ffmpeg/ffprobe

    # Path to the tesseract binary used by the text analyzer. Its name is
    # sufficient if the binary is in the system path (default: tesseract)
    #org.opencastproject.textanalyzer.tesseract.path=/opt/tesseract/tesseract

    # Additional options for Tesseract like language or page segmentation mode.
    # The default are no additional options.
    #org.opencastproject.textanalyzer.tesseract.options=-l eng -psm 3

    # Path to the hunspell binary used by the matterhorn-dictionary-hunspell
    # module. The default ist just "hunspell" which requires hunspell to be in the
    # search path.
    #org.opencastproject.dictionary.hunspell.binary=/opt/hunspell/hunspell

    # Command to use for filtering text by the matterhorn-dictionary-hunspell
    # module. The command is appended to the hunspell binary path. It should filter
    # the text from stdin and print the recognized words to stdout. Usually this
    # should be a combination of "-G" and a list of dictionaries. The default is to
    # use "-d de_DE,en_GB,en_US -G".
    #org.opencastproject.dictionary.hunspell.command=-i utf-8 -d de_DE,en_GB,en_US -G

    # The path for SoX command line used by audio normalization
    #org.opencastproject.sox.path=/opt/sox/sox

    ######### Test Data #########

    # Whether opencast should import test-data by the given csv file path.
    # Default: false
    #org.opencastproject.dataloader.testdata=false

    # The path to the CSV file to import the data from it
    org.opencastproject.dataloader.csv=${karaf.etc}/dataimport


    ######### Static Files #########

    # True means to use a webserver to serve the static files but this will not secure
    # any of the files using user or organization security. If false it uses
    # Opencast endpoints to serve and secure the files.
    #org.opencastproject.staticfiles.webserver.enabled=false

    # The url to the location where the webserver serves the static file uploads from. It will add the organization and uuid
    # for the uploaded static file. If not set Opencast uses endpoints to serve and secure the files.
    #org.opencastproject.staticfiles.webserver.url=${org.opencastproject.server.url}/staticfiles/

    # This is the maximum allowable size in bytes for a file to be uploaded. If the property is missing or set to 0 it is
    # disabled.
    # Default is 1000000000 which is 1GB.
    #org.opencastproject.staticfiles.upload.max.size=1000000000


    ######### User Directory #########

    # The size of the user directory cache.
    # Default: 200
    #org.opencastproject.userdirectory.cache.size=200

    # The expiry time of entries in the user directory cache, in minutes
    # Default: 1 minute
    #org.opencastproject.userdirectory.cache.expiry=1


    ######### KARAF CONFIGURATION #########

    # The place for Karaf to put the lock file ensuring that Opencast is not run twice at the same time.
    karaf.lock.dir=${karaf.data}

    # Setting or deactivating the remote shutdown port in Apache Karaf. Commenting this out will make Karaf listen to a
    # random shutdown port on localhost, announcing it via ${karaf.shutdown.port.file}. Setting this to -1 will deactivate
    # the shutdown port. Note that the stop script is based on this and will not work any longer if the port is deactivated.
    #karaf.shutdown.port=-1

    # Specifies the location of the port file for Opencast. It is used by the shutdown script to send the shutdown command
    # to the main process.
    karaf.shutdown.port.file=${karaf.data}/port

    # Command for shutting down Opencast. If the shutdown port is enabled, Opencast will listen for this command to initiate
    # the shut down procedure.
    # Change this to something secret
    karaf.shutdown.command=12A00F31-F81C-4527-B0F5-2AD1F8D37309

    # Specifies the location of the PID file for Opencast. It is used by the shutdown script to synchronously shut down
    # Opencast as it will wait for the process with the given process id. Removing this will cause the network port to be
    # used as fallback.
    karaf.pid.file=${karaf.data}/pid


    ######### Miscellaneous #########

    # Send server configuration data to the Opencast project to help us track how people are using Opencast.  No security
    # related information will be sent to the opencast project.  Comment this out to disable this feature.
    #org.opencastproject.anonymous.feedback.url=http://opencast.org/form/tracking

    # The mount point of the OAI-PMH servlet.
    # Please make sure that the path configured is accessible without any login (see security.xml)
    # This setting is configured here and not in the OAI-PMH server's config since it is shared amongst several
    # OAI-PMH related components.
    #org.opencastproject.oaipmh.mountpoint=/oaipmh

    # This changes the number of seconds from when an internal request is made until a signed URL will expire. More
    # specifically, the HTTP client needs access to internal storage areas such as the working file repository as well as to
    # distributed artifacts on the downloads and streaming servers, all of which are protected by verification components.
    # Default is 60 seconds as it shouldn't take longer than that to make a request to a server. This will have no impact on
    # a system where url signing is not configured. For more information please see:
    # http://docs.opencast.org/latest/admin/configuration/stream-security/#configuration-of-url-signing-timeout-values
    #org.opencastproject.security.internal.url.signing.duration=60

  mh_default_org.cfg: |
    # Organization (tenant) definition.
    #
    # With Opencast being capable of hosting multiple tenants per installation, there needs
    # to be one organization configuration per tenant.
    #
    # Therefore, in order to add another tenant to the installation, put a file named
    # org.opencastproject.organization-<tenant id>.cfg into Opencast's "load" directory.
    # Make sure to adjust at least the following fields to properly map the new tenant to the
    # installation:
    #
    #   - id
    #   - server
    #   - port
    #   - prop.org.opencastproject.admin.ui.url
    #   - prop.org.opencastproject.engage.ui.url
    #   - prop.org.opencastproject.external.api.url
    #   - prop.org.opencastproject.assetmanager.url
    #

    # Identifier of the tenant on this Opencast installation.
    #
    # The identifier is used to map data that belongs to this tenant only as well as during
    # lookup of related configuration entities such as the security settings in etc/security.
    #
    # Value: a text identifier using [a-Z, 0..9, _, -] as characters.
    #
    id=mh_default_org

    # Name of the organization (tenant).
    #
    # Value: <text>
    #
    name=Opencast Project

    # Server name that identifies the organization (tenant) on this Opencast installation.
    #
    # Use the public url that is assigned to this tenant. In out-of-the-box installations
    # with only one tenant, this value corresponds to the server.url in etc/config.properties.
    # Make sure to adjust these two keys accordingly:
    #
    #   - prop.org.opencastproject.admin.ui.url
    #   - prop.org.opencastproject.engage.ui.url
    #
    # Value: <hostname without schema and port>
    #
    server=localhost

    # Port for this tenant.
    #
    # When run behind a proxy server, set this to -1 since most proxies won't forward the
    # original port and set the corresponding field in the request to this value.
    #
    # Value: <integer port number>
    #
    port=-1

    # Identifier of the Administrative role.
    #
    # Value: a text identifier using [a-Z, 0..9, _, -] as characters.
    # Default: ROLE_ADMIN
    #
    admin_role=ROLE_ADMIN

    # Identifier of the Anonymous role.
    #
    # Value: a text identifier using [a-Z, 0..9, _, -] as characters.
    # Default: ROLE_ANONYMOUS
    #
    anonymous_role=ROLE_ANONYMOUS


    # The base URL of the file server. When using a shared filesystem between servers, set all servers to use the same URL.
    # Only then will hard linking between the working file repository and the workspace be enabled to prevent downloads.
    #
    # Value: <a complete url with scheme and port>
    # Default: the value of ${org.opencastproject.server.url}
    #
    #prop.org.opencastproject.file.repo.url=${prop.org.opencastproject.admin.ui.url}

    # Link to the Admin UI.
    #
    # Value: <a complete url with scheme and port>
    # Default: ${org.opencastproject.server.url}
    #
    prop.org.opencastproject.admin.ui.url=http://oc-admin.k8s.mtneug.de

    ###
    # OAI-PMH

    # The host URL of the OAI-PMH server. Remember to omit the mount point since it is read
    # from custom.properties -> org.opencastproject.oaipmh.mountpoint
    prop.org.opencastproject.oaipmh.server.hosturl=${prop.org.opencastproject.engage.ui.url}

    # Link to the Opencast documentation.
    #
    # If the property is specified, the admin ui help menu will link to the documentation.
    # The value needs to be a URL if set.
    # Default: undefined
    prop.org.opencastproject.admin.help.documentation.url=http://docs.opencast.org

    # Link to the Opencast REST service documentation for the local system.
    #
    # If the property is specified, the admin ui help menu will link to the documentation.
    # The value needs to be a URL if set.
    # Default: undefined
    prop.org.opencastproject.admin.help.restdocs.url=/rest_docs.html

    # Link to the media module
    #
    # If the property is specified, the admin ui will show a media module icon on the top-right that links
    # to the media module.
    # The value needs to be a URL if set.
    # Default: undefined
    prop.org.opencastproject.admin.mediamodule.url=${prop.org.opencastproject.engage.ui.url}/engage/ui

    # Link to a JIRA feedback widget collector.
    #
    # If the property is specified, the feedback button in the lower right corner will
    # link to the widget and allow to create issues right inside the project. If the
    # property is not specified, the feedback button will be hidden.
    #
    # Value: <a complete url with scheme and port>
    #
    #prop.org.opencastproject.admin.feedback.url=

    # Link to the Engage UI.
    #
    # Value: <a complete url with scheme and port>
    # Default: ${org.opencastproject.server.url}
    #
    prop.org.opencastproject.engage.ui.url=http://oc.k8s.mtneug.de

    # Link to the RSS and atom feed base
    #
    # Value: <a complete url with scheme and port>
    # Default: ${org.opencastproject.server.url}
    #
    #prop.org.opencastproject.feed.url=http://localhost:8080

    # Link to the External API
    #
    # Value: <a complete url with scheme and port>
    # Default: ${org.opencastproject.server.url}
    #
    #prop.org.opencastproject.external.api.url=http://localhost:8080

    # Link to the AssetManager base
    #
    # Value: <a complete url with scheme and port>
    # Default: ${org.opencastproject.server.url}
    #
    #prop.org.opencastproject.assetmanager.url=http://localhost:8080

    # Path to the logo that is displayed in the upper left part of the
    # media module page.
    #
    # Value: <a complete url with scheme and port>
    #
    prop.logo_mediamodule=/engage/ui/img/logo/opencast-icon.svg

    # Path to the logo that is displayed in the Opencast 2.0 player
    #
    # Value: <a complete url with scheme and port>
    #
    prop.logo_player=/engage/theodul/ui/img/opencast.svg

    # Define size of Chunksize on upload in KB.
    #
    # Value: <integer>
    # Default: 2048
    #
    prop.adminui.chunksize=2048

    # Set a flag to display External Roles on User modal
    #
    # Value: <boolean>
    # Default: false
    prop.adminui.user.external_role_display=false

    # Name of the list to provide a user listing as used in the group editor of the admin ui.
    #
    # Values:
    # - USERS.INVERSE will list users by name (e.g. "John Sample")
    # - USERS.INVERSE.WITH.EMAIL will list users by name and email (e.g. "John Sample <j.sample@opencast.org>")
    # - USERS.INVERSE.WITH.USERNAME will list users by name and username (e.g. "John Sample (jsample)")
    # Default: USERS.INVERSE.WITH.USERNAME
    #prop.adminui.user.listname=USERS.INVERSE.WITH.USERNAME

    # Defines whether to display the default login and username on the login page
    #
    # Values: true | false
    # Default: false
    #
    prop.login.display_defaults=true

    # Flag for displaying the download link.
    #
    # Values: true, false
    # Default:
    #
    prop.engageui.link_download.enable=false

    # Flag for enabling annotations globally.
    #
    # Values: true, false
    # Default: true
    #
    prop.engageui.annotations.enable=true

    # Flag for displaying the media module.
    #
    # Values: true, false
    # Default: true
    #
    prop.engageui.links_media_module.enable=true

    # Flag for displaying a redirect when surfing with a mobile device
    #
    # Values: true, false
    # Default: false
    #
    prop.engageui.link_mobile_redirect.enable=false

    # URL for the mobile redirect.
    #
    # Value: A URL for a html URL tag
    # Default: <none>
    #
    prop.engageui.link_mobile_redirect.url=http://opencast.org/

    # Description for the mobile redirect.
    #
    # Value: <text>
    # Default: <none>
    #
    prop.engageui.link_mobile_redirect.description=For more information have a look at the official site.

    #
    # USER TRACKING IN PLAYER
    # These settings allow a tracking of user interaction with Piwik (https://piwik.org/) in the Opencast Player
    # Only if a Piwik server is provided the Piwik plugin will be activated.
    #

    # The Piwik server from which the Piwik JS library will be loaded and where the dat awill be reported
    #prop.player.piwik.server=http://localhost/piwik

    # The Piwik site ID has to be numeric value. If not set this will be 1.
    #prop.player.piwik.site_id=1

    # The heartbeat setting to track how long a user stayed on the player page. Set to 0 or comment this line to
    # disable the heartbeat
    #prop.player.piwik.heartbeat=30

    # This setting lets you track several player events. Add the events that you want to track to the list. Comment this
    # line to prevent event tracking
    # Events that can be tracked:
    # - play: play has been pressed (will also be called if after seeking).
    # - pause: pause has been pressend (will also be called if before seeking).
    # - seek: user jumps to a different time. Time in seconds will be stored
    # - ended: video has reached the end
    # - playbackrate: user changes the playback speed (values 0.75 to 3.00)
    # - volume: Volume change by the user value 0.0 to 1.0
    # - quality: manual change of video quality (quality tag is stored)
    # - fullscreen: user presses fullscreen button
    # - focus: user selects one video to be enlarged (flavor of selected video is stored)
    # - layout_reset: user switches back to default layout
    # - zoom: user changes the zoom of the video
    #prop.player.piwik.track_events=play, pause, seek, ended, playbackrate, volume, quality, fullscreen, focus, layout_reset, zoom

    # Choose the default video player
    # comment in the following line for the old flash player
    # prop.player=/engage/ui/player.html
    # comment in the following line for the html5 player
    prop.player=/engage/theodul/ui/core.html

    # The default flavor of the master video (the video on the "left side" in the video display)
    prop.player.mastervideotype=presenter/delivery

    # Play only videos that are tagged with one of these tags
    # default: don't filter for tags at all
    prop.player.allowedtags=engage-download,engage-streaming

    # Play only videos that use these video/streaming formats.
    # The format setting in the browser will be done for what is left after these have been filtered
    # with this setting.
    # default: don't filter for video/streaming formats at all
    # allowed values: hls,dash,rtmp,mp4,webm,audio
    # prop.player.allowedformats=hls,dash,mp4

    # Choose where the controls will be rendered
    # Options:
    #   - top
    #   - bottom
    prop.player.positioncontrols=bottom

    # Choose which layout should be applied if none is stored in the local storage of the browser
    # Options:
    #   - left
    #   - right
    #   - beside
    #   - off (default)
    prop.player.layout=off

    # Choose which flavor (without subflavor) should be focused in the layout if none is stored in the local storage.
    # The focused flavor will only be used if prop.player.layout is not "off".
    prop.player.focusedflavor=presentation

    # Hide the browser context menu on video elements (true|false)
    # Default: false
    prop.player.hide_video_context_menu=false

    # Link back to Media Module from Theodul player (true|false)
    # Default: false
    prop.link_mediamodule=true

    # Link back to Media Module from Theodul player (true|false)
    # Default: false
    prop.show_embed_links=true

    # Shortcut definitions for the html5 player
    # - modifier keys
    #   - shift
    #   - ctrl
    #   - alt
    #   - option
    #   - meta
    #   - command
    #   - mod -- combines Mac 'command' and Windows/Linux 'ctrl'
    # - special keys
    #   - backspace
    #   - tab
    #   - enter
    #   - return
    #   - capslock
    #   - esc
    #   - escape
    #   - space
    #   - pageup
    #   - pagedown
    #   - end
    #   - home
    #   - left
    #   - up
    #   - right
    #   - down
    #   - ins
    #   - del
    # - any other key
    #   - should be referenceable by name like a, /, $, *, or =
    # - for more information have a look at the player docs
    prop.player.shortcut.controls.playPause=space
    prop.player.shortcut.controls.seekRight=right
    prop.player.shortcut.controls.seekLeft=left
    prop.player.shortcut.controls.jumpToBegin=backspace
    prop.player.shortcut.controls.prevChapter=pagedown
    prop.player.shortcut.controls.nextChapter=pageup
    prop.player.shortcut.playbackrate.increase=t
    prop.player.shortcut.playbackrate.decrease=T
    prop.player.shortcut.volume.muteToggle=m
    prop.player.shortcut.volume.up=9
    prop.player.shortcut.volume.down=8
    prop.player.shortcut.fullscreen.enable=mod+enter
    prop.player.shortcut.fullscreen.cancel=escape
    prop.player.shortcut.layout.focusNext=>
    prop.player.shortcut.layout.focusPrev=<
    prop.player.shortcut.layout.movePiP=p
    prop.player.shortcut.layout.togglePiP=o
    prop.player.shortcut.zoom.moveLeft=a
    prop.player.shortcut.zoom.moveRight=d
    prop.player.shortcut.zoom.moveUp=w
    prop.player.shortcut.zoom.moveDown=s
    prop.player.shortcut.zoom.in=+
    prop.player.shortcut.zoom.out=-

    prop.player.shortcut-sequence=controls,volume,playbackrate,layout,zoom,fullscreen

    # Shortcut definitions for admin UI video player
    # Format: prop.admin.shortcut.player<action>=<key>
    prop.admin.shortcut.player.play_pause=space
    prop.admin.shortcut.player.previous_frame=left
    prop.admin.shortcut.player.next_frame=right
    prop.admin.shortcut.player.previous_segment=up
    prop.admin.shortcut.player.next_segment=down
    prop.admin.shortcut.player.step_backward=ctrl+left
    prop.admin.shortcut.player.step_forward=ctrl+right
    prop.admin.shortcut.player.volume_up=+
    prop.admin.shortcut.player.volume_down=-
    prop.admin.shortcut.player.mute=m

    # Shortcut definitions for admin UI video editor
    # Format: prop.admin.shortcut.editor.<action>=<key>
    prop.admin.shortcut.editor.split_at_current_time=v
    prop.admin.shortcut.editor.cut_selected_segment=backspace
    prop.admin.shortcut.editor.play_current_segment=c
    prop.admin.shortcut.editor.play_current_segment_with_pre-roll=C
    prop.admin.shortcut.editor.play_ending_of_current_segment=n
    prop.admin.shortcut.editor.clear_list=ctrl+backspace

    # Shortcut definitions for admin UI video editor
    # Format: prop.admin.shortcut.general.<action>=<key>
    prop.admin.shortcut.general.new_event=n
    prop.admin.shortcut.general.new_series=N
    prop.admin.shortcut.general.event_view=e
    prop.admin.shortcut.general.series_view=s
    prop.admin.shortcut.general.remove_filters=r
    prop.admin.shortcut.general.select_next_dashboard_filter=f
    prop.admin.shortcut.general.select_previous_dashboard_filter=F
    prop.admin.shortcut.general.main_menu=m
    prop.admin.shortcut.general.help=?

    # Default values for a few fields in New Event Creation modal
    #
    # Properties: prop.admin.event.new.[start_time|end_time|duration|interval]
    #
    # Description: automatically populates fields in the Source tab during the
    #              creation of new events. The fields populated are 'Start Date',
    #              'Start Time' and 'Duration', and are set as follows
    #
    #              Start Time - current time rounded up to the next available timeslot,
    #                           or the first available timeslot on the next day.
    #              Start Date - current day if the calculated timeslot is earlier
    #                           than the cutoff time for the day, or the next day,
    #                           i.e. today if possible, otherwise tomorrow.
    #              Duration   - the default duration of events
    #
    # Start time of first timeslot in the day
    # Format: HH:mm
    # Default: 08:00
    #prop.admin.event.new.start_time=08:00

    # Cut-off time for recordings in the day
    # Format: HH:mm
    # Default: 20:00
    #prop.admin.event.new.end_time=20:00

    # Duration of event recording in minutes
    # Default: 55
    #prop.admin.event.new.duration=55

    # Interval between recording start times in minutes
    # Default: 60
    #prop.admin.event.new.interval=60

    # Note: prop.admin.event.new.duration need not match prop.admin.event.new.interval;
    #       this is to allow short intermissions between consecutive events.

    #
    # Display durations for different notification types in SECONDS.
    #
    # If you specify the value -1 the notification will remain until manually closed by the user.

    # Display duration for notification type error
    #
    # Format: A integer or -1
    # Default: -1
    #
    #prop.admin.notification.duration.error=-1

    # Display duration for notification type success
    #
    # Format: A integer or -1
    # Default: 5
    #
    #prop.admin.notification.duration.success=5

    # Display duration for notification type warning
    #
    # Format: A integer or -1
    # Default: 5
    #
    #prop.admin.notification.duration.warning=5
